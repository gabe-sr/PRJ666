{"version":3,"sources":["Components/dashboard/Dashboard.js","Components/scheduler/TimePicker.js","Components/scheduler/Scheduler.js","Components/user_authorization/modal-message/ModalMessage.js","Components/shared/table_data/TableData.js","Components/shared/spinner/SpinnerLoading.js","Components/HOC/loading-spinner/WithLoadingSpinner.js","Components/HOC/modal-messages/WithMessage.js","Components/shared/form-components/FormField.js","Components/login/LoginForm.js","Components/login/LoginModal.js","Components/error-pages/Error.js","Components/user_authorization/UserAuthorization.js","Components/shared/hook/useAuthentication.js","Components/dashboard/sidebar/Sidebar.js","Components/sign_up/sign_up-form/state_uf_data.js","Components/shared/hook/useFetchUser.js","Components/dashboard/user_profile/UserProfile.js","Components/dashboard/change_pw/ChangePasswordForm.js","Components/reports/user-report/Timeslots.js","Components/reports/user-report/UserQueryForm.js","Components/shared/table_data/TableWithPagination.js","Components/shared/excel-export/ExcelComponent.js","Components/reports/user-report/UserReport.js","Components/reports/Reports.js","Components/shared/hook/imagesDataSource.js","images/room-beige-1.jpeg","images/room-beige-2.jpeg","images/room-blue-1.jpeg","images/room-blue-2.jpeg","images/room-building.jpeg","images/room-entrance-1.jpeg","images/room-entrance-2.jpeg","images/room-green-1.jpeg","images/room-green-2.jpeg","images/room-view.jpeg","images/nathalia.jpg","images/pri.jpg","Components/shared/hook/useFetchRoom.js","Components/scheduler/Booking.js","Components/shared/table_data_new/NewTableData.js","Components/dashboard/bookings/BookingList.js","Components/scheduler/Maintenance.js","Components/reports/monthly-total/QueryForm.js","Components/reports/monthly-total/MonthlyTotalReport.js","Components/reports/monthly-user/QueryForm.js","Components/reports/monthly-user/MonthlyUserReport.js","Components/routes/ProtectedRoutes.js","Components/shared/navbar/main_navbar/MainNavbar.js","Components/footer/Footer.js","Components/main_page/MainPage.js","Components/sign_up/sign_up-form/SignUpForm.js","Components/sign_up/SignUpModal.js","Components/sign_up/SignUp.js","Components/redefine-password/RedefinePassword.js","Components/redefine-password/RedefinePasswordLink.js","Components/about_us/About.js","App.js","index.js"],"names":["Dashboard","props","userData","useEffect","window","scrollTo","DashboardHome","first_name","last_name","className","Container","HOURS","ACTIONS","reducer","timeslots","action","type","map","ts","id","payload","active","disabled","idxm","parseInt","variant","idx","console","log","time","TimePicker","bookings","timeSelected","maintenance","day","useReducer","forEach","t","push","createTs","dispatch","today","useRef","Date","b","booking_date","substring","isSameDay","current","addHours","getHours","ToggleButtonGroup","name","vertical","timeslot","ToggleButton","onChange","size","Scheduler","userid","roomid","useState","setHours","startOfDay","setDay","setBookings","selected","setSelec","price","setPrice","show","setshow","data","setData","currDay","maxDay","addDays","roomName","handleDayClick","date","modifiers","fetchBookings","useCallback","a","axios","get","params","begin","toDateString","end","res","fetchedbkns","newB","filter","parseISO","getUTCHours","getDate","alert","message","fetchRoomPrice","fetchedroom","onConfirm","post","user_id","room_id","price_at_booking","req","handleClose","onCancel","Row","Col","differenceInDays","startOfMonth","canChangeMonth","selectedDays","onDayClick","disabledDays","before","after","fromMonth","toMonth","fixedWeeks","dateWtime","correctedDate","subMinutes","getTimezoneOffset","Button","onClick","Modal","onHide","backdrop","Header","title","Body","undefined","error","Footer","ModalMessage","setShow","closeModalMessage","user","keyboard","centered","closeButton","TableData","values","whenClicked","customColumn","Table","bordered","responsive","hover","headers","head","index","style","cursor","columns","colName","customColumnComp","find","fnc","colDesc","SpinnerLoading","Spinner","animation","WithLoadingSpinner","WrappedComponent","loadingMessage","isLoading","setLoading","setMessage","setLoadingSpinner","isComponentLoading","WithMessage","showMessage","setShowMessage","messageHeader","setMessageHeader","messageBody","setMessageBody","redirectUrl","setRedirect","callBack","setCallBack","history","useHistory","MessageModal","fullscreen","Title","setModalMessage","header","redirect","callback","FormField","label","formType","formData","useField","field","meta","ref","myref","htmlFor","touched","autoComplete","opt","component","validationSchema","Yup","shape","email","required","password","min","redirectTo","handleLoginSubmit","setFieldError","response","display","success","handlemodal","pathname","state","go","initialValues","onSubmit","formik","placeholder","href","LoginModal","showmodal","handleAuthState","Error","setHeader","location","showModal","setShowModal","errorType","dataIsLoaded","setValues","pendingCount","setPendingCount","setError","fetchData","key","sortedData","sort","toLowerCase","countPending","length","status","setKey","keyChanged","changeFlag","userToActivate","setUserToActivate","showModalMessage","setShowModalMessage","updateActiveOnDB","activeStatus","userId","_id","activeUserStatus","patchUser","patch","Tabs","activeKey","onSelect","e","handleKey","Tab","eventKey","color","fontSize","verticalAlign","path","Dropdown","DropdownButton","drop","Item","useAuthentication","isAuth","setAuth","getAuth","handleLogout","SideBarBody","to","isAdmin","s","resize","Offcanvas","scroll","state_uf_data","useFetchUser","fetchedUser","setUser","fetchUser","toString","phoneDelimiter","setPhoneDelimiter","phone","matches","dob","city","zip","address1","address2","handleFetchZip","cep","formRef","then","erro","state_uf","uf","search","setFieldValue","localidade","logradouro","err","handleSubmitForm","method","url","redirectURL","handleAdminDisabled","innerRef","crp_no","cpf_no","maxLength","onKeyUp","phoneDelimiterHandle","confirmPassword","oneOf","resetForm","Timeslots","text","UserQueryForm","startDate","endDate","startTime","endTime","room","query","setQuery","handleSubmit","handleChange","errors","isValid","Form","noValidate","Group","as","xs","controlId","Label","Control","value","Select","isInvalid","Feedback","Check","inline","defaultChecked","children","pagination","paginationQuery","pagActive","setPagActive","currPage","setCurrPage","changed","setChanged","max_rows","paginationTotal","num_pages","Math","ceil","handlePagination","target","handlePagFirstLast","position","handlePagNextPrev","prev","items","number","Pagination","Intl","NumberFormat","currency","format","cancelled","First","Prev","Next","Last","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Object","byString","o","replace","split","i","n","k","fileName","filename","element","item","indexOf","col","parseFloat","excelButton","setExcelButton","prevQuery","setPrevQuery","textResponse","setTextResponse","setPaginationQuery","handleFetchReport","_query","bookdate","toLocaleTimeString","hour","minute","timeZone","total","ExcelButton","allData","TableWithPagination","pagQ","Reports","Accordion","flush","images","roomBeige1","roomBeige2","roomBlue1","roomBlue2","roomBuilding","roomEntrance1","roomEntrance2","roomGreen1","roomGreen2","roomView","nathalia","pri","useFetchRoom","fetchedRoom","setRoom","fetchRoom","Booking","handleRoom","rid","handleMaintenance","React","modalShow","setModalShow","modalId","setModalId","RoomModal","description","Card","width","Carousel","interval","Img","height","padding","src","Text","NewTableData","customColumnComp2","radios","BookingList","radioValue","setRValue","tabKey","setTab","tabChanged","bk","temp","requestCancel","_isCancelled","cancel_request","customRequestColumn","request","handleModalOpen","booking","ButtonGroup","radio","checked","currentTarget","class","Maintenance","booking_dates","booking_type","prevSelec","newSelec","d","QueryForm","monthsList","setMonthsList","yearChanged","setYearChanged","yearsList","years","eachYearOfInterval","start","y","getSelectYears","year","months","getYear","endOfYear","set","eachMonthOfInterval","startOfYear","mon","getMonth","getSelectMonths","month","handleBlur","span","offset","setSelectedMonth","setSelectedYear","setTotal","fetchTotal","sum","toFixed","lastBookingDate","setUserData","MyModal","fontWeight","suggestions","setSuggestions","handleSuggestions","show_cancel","onBlur","setTimeout","sug","handleNameClick","users","setUsers","showModalUsers","setShowModalUsers","handleQuery","multiple","substr","toUpperCase","handleModalUsers","usr","join","ModalUsers","ProtectedRoutes","match","resizeContent","setResizeContent","arg","exact","render","handleLoginModal","ProtectedNavbar","Navbar","sticky","expand","Brand","Link","Toggle","Collapse","Nav","NavLink","PublicNavbar","EmptyNavbar","integrity","crossorigin","MainPage","alt","role","crpDelimiter","setCrpDelimiter","max","apiError","setApiError","errorRef","scrollIntoView","behavior","crpDelimiterHandle","withRouter","isOpen","closeModal","displayMessage","setDisplayMessage","SignUp","modal","setModal","setState","linkId","getLink","link","About","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d7b6d268.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = (props) => {\n  // user data from protected route component, fetched with isAuthenticated hook\n  const { userData } = props;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // welcome page/block for dashboard\n  const DashboardHome = (props) => {\n    const { first_name, last_name } = props.userData;\n    return (\n      <div className=\"text-secondary\">\n        <h2>{`Welcome ${first_name} ${last_name}`}</h2>\n        <hr />\n        <Container className=\"text-left\">\n          <h4>Messages</h4>\n          <p>You have no new messages.</p>\n        </Container>\n        <br />\n        <hr />\n        <Container className=\"text-left\">\n          <h4>Latest Bookings</h4>\n          <p>You have no bookings.</p>\n        </Container>\n      </div>\n    );\n  };\n\n  return <DashboardHome userData={userData} />;\n};\nexport default Dashboard;\n","import React, { useReducer, useEffect, useRef } from \"react\";\nimport { Container, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { isSameDay,addHours } from \"date-fns\";\n\n// available hours\nconst HOURS = [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19];\n\n// These are the actions that can be executed upon a timeslot\nexport const ACTIONS = {\n  TOGGLE: \"toggle\",\n  SELECT: \"select\",\n  OCCUPY: \"occupy\",\n  MAINTENANCE: \"occupy_maintenance\",\n  AVAILABLE: \"available\"\n};\n\n// this reducer function acts upon the timeslot array\nconst reducer = (timeslots, action) => {\n  switch (action.type) {\n    case ACTIONS.TOGGLE:\n      //toggle radio button if selected, only one at a time\n      return timeslots.map((ts) => {\n        if (ts.id === action.payload.id) {\n          return { ...ts, active: !ts.active };\n        } else if (ts.disabled === false) {\n          return { ...ts, active: false };\n        }\n        return ts;\n      });\n    case ACTIONS.OCCUPY:\n      //make timeslots received from scheduler active and disabled\n      let idxm = 0;\n      return timeslots.map((ts) => {\n        if ( ts.id === parseInt(action.payload.id[idxm]) ) {\n          idxm++;\n          return { ...ts, disabled: true, active: true, variant: \"secondary\" };\n        } else {\n          return {\n            ...ts,\n            disabled: false,\n            active: false,\n            variant: \"outline-primary\",\n          };\n        }\n      });\n    case ACTIONS.MAINTENANCE:\n      //make timeslots received from scheduler active and disabled\n      let idx = 0;\n      return timeslots.map((ts) => {\n        if ( ts.id === parseInt(action.payload.id[idx]) ) {\n          idx++;\n          return { ...ts, disabled: false, active: true, variant: \"secondary\" };\n        } else {\n          return {\n            ...ts,\n            disabled: false,\n            active: false,\n            variant: \"outline-primary\",\n          };\n        }\n      });\n    case ACTIONS.SELECT:\n      //make timeslots received from scheduler active and disabled\n      return timeslots.map((ts) => {\n        if (ts.id === action.payload.id && ts.variant === \"secondary\"){\n          return {...ts, variant: \"outline-info\" };\n        }else if(ts.id === action.payload.id && ts.variant === \"outline-info\"){\n          return {...ts, variant: \"secondary\" };\n        }else if(ts.id === action.payload.id){\n          return { ...ts, active: !ts.active };\n        }\n        return ts\n      });\n      case ACTIONS.AVAILABLE:\n      //make timeslots received from scheduler active and disabled\n      return timeslots.map((ts) => {\n        console.log(action.payload.time)\n        if (ts.id <= action.payload.time){\n          return{...ts, disabled:true}\n        }\n        return ts\n      });\n    default:\n      return timeslots;\n  }\n};\n\n// this function uses the HOURS array to map an initialize an array of objects (timeslots)\nconst createTs = () => {\n  let ts = [];\n  HOURS.forEach((t, idx) => {\n    ts.push({\n      id: t,\n      disabled: \"false\",\n      variant: \"outline-primary\",\n      active: \"false\",\n    });\n  });\n  return ts;\n};\nconst TimePicker = ({ bookings, timeSelected, maintenance, day }) => {\n  const [timeslots, dispatch] = useReducer(reducer, createTs());\n  const today = useRef(new Date())\n  useEffect(() => {\n  }, []);\n  useEffect(() => {\n    const b = bookings.map((b) => {\n      return b.booking_date.substring(11, 13);\n    });\n    maintenance ? \n      dispatch({ type: ACTIONS.MAINTENANCE, payload: { id: b } })\n        : \n      dispatch({ type: ACTIONS.OCCUPY, payload: { id: b } });\n    \n    if(isSameDay(day,today.current)){\n      dispatch({type: ACTIONS.AVAILABLE, payload:{ time: (addHours(today.current,1)).getHours()}})\n    }\n\n    return () => {};\n  }, [bookings, maintenance, day]);\n\n  return (\n    <Container>\n      {/* <ToggleButtonGroup type={\"radio\"} name={\"hourselect\"} vertical>\n        {timeslots.map((timeslot) => {\n          return (\n            <ToggleButton\n              key={timeslot.id}\n              id={`btn-${timeslot.id}`}\n              disabled={timeslot.disabled}\n              variant={timeslot.variant}\n              active={timeslot.active}\n              onChange={() => {\n                dispatch({\n                  type: ACTIONS.TOGGLE,\n                  payload: { id: timeslot.id },\n                });\n                timeSelected(timeslot.id);\n              }}\n              size=\"lg\"\n            >\n              {`${timeslot.id}:00`}\n            </ToggleButton>\n          );\n        })}\n      </ToggleButtonGroup> */}\n\n      <ToggleButtonGroup type={\"radio\"} name={\"hourselect\"} vertical>\n        {maintenance ?\n        timeslots.map((timeslot) => {\n          return (\n            <ToggleButton\n              key={timeslot.id}\n              id={`btn-${timeslot.id}`}\n              disabled={timeslot.disabled}\n              variant={timeslot.variant}\n              active={timeslot.active}\n              onChange={() => {\n                dispatch({\n                type: ACTIONS.SELECT,\n                payload: { id: timeslot.id },\n              });\n                timeSelected(timeslot.id);\n              }}\n              size=\"lg\"\n            >\n              {`${timeslot.id}:00`}\n            </ToggleButton>\n          );\n        })\n        :\n        timeslots.map((timeslot) => {\n          return (\n            <ToggleButton\n              key={timeslot.id}\n              id={`btn-${timeslot.id}`}\n              disabled={timeslot.disabled}\n              variant={timeslot.variant}\n              active={timeslot.active}\n              onChange={() => {\n                dispatch({\n                type: ACTIONS.TOGGLE,\n                payload: { id: timeslot.id },\n              });\n                timeSelected(timeslot.id);\n              }}\n              size=\"lg\"\n            >\n              {`${timeslot.id}:00`}\n            </ToggleButton>\n          );\n        })}\n      </ToggleButtonGroup>\n    </Container>\n  );\n};\n\nexport default TimePicker;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  addDays,\n  differenceInDays,\n  startOfMonth,\n  startOfDay,\n  setHours,\n  parseISO,\n  subMinutes\n} from \"date-fns\";\nimport DayPicker from \"react-day-picker\";\nimport \"../../../node_modules/react-day-picker/lib/style.css\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button, Modal } from \"react-bootstrap\";\nimport TimePicker from \"./TimePicker\";\n\nconst Scheduler = ({ userid, roomid }) => {\n  const [day, setDay] = useState(setHours(startOfDay(new Date()),2));\n  const [bookings, setBookings] = useState([]);\n  const [selected, setSelec] = useState(null);\n  const [price, setPrice] = useState(0);\n  const [show, setshow] = useState(false);\n  const [data, setData] = useState({});\n  const currDay = useRef(startOfDay(new Date()));\n  const maxDay = useRef(addDays(startOfDay(new Date()), 7));\n  const roomName = useRef();\n\n  const timeSelected = (time) => {\n    /* correct date for timezone. Data should be persisted to db only in UTC time, due to date-fns ver2.x not accepting operations with dates from strings\n        it is parsed, using parseISO, it is adjusted to local browser/system time. When the time is selected since we are using raw numeric values for the\n        time, it needs to be readjusted/corrected to correctly represent the actual timeslot selected. All revolves around time in the coworking location.\n        \" SELECTED IS ALWAYS CORRECTED FOR UTC TIME, OR NULL \"*/\n    const dateWtime = setHours(day,time);\n    const correctedDate = subMinutes(dateWtime, day.getTimezoneOffset());\n    setSelec(correctedDate);\n    console.log(bookings)\n    // setSelec(setHours(day, (time-(day.getTimezoneOffset()/60))));\n  };\n\n  const handleDayClick = (date, modifiers = {}) => {\n    if (modifiers.disabled) {\n      return;\n    }\n    setDay(setHours(date, 2));\n  };\n\n  /* function to fetch bookings for a certain date it uses usecallback so it doesnt get\n      reconstructed after every render, and to assure that if the function is passed to\n      children components it will have referential integrity*/\n  const fetchBookings = useCallback(\n    async (day) => {\n      try {\n        const res = await axios.get(\"/book\", {\n          params: {\n            type: 'general',\n            begin: day.toDateString(), \n            end: addDays(day, 1).toDateString(), \n            roomid: roomid\n          },\n        });\n        const fetchedbkns = await res.data;\n        \n        /* sanitize data (only valid timeslots are set to bookings)\n            if there are invalid bookings in db this removes it for \n            display purposes (implement DELETE method to clean DB)*/\n        const newB = fetchedbkns.filter((b)=>{\n          return ((parseISO(b.booking_date).getUTCHours()) >= 8 && \n                  (parseISO(b.booking_date).getUTCHours()) <= 19 &&\n                  (parseISO(b.booking_date).getUTCHours()) !== 12)\n        })\n        // console.log(\"hello\");\n        console.log(day);\n        console.log(day.getDate())\n        setBookings(newB);\n      } catch (err) {\n        alert(err.message);\n        console.log(err);\n      }\n    },\n    [roomid]\n  );\n\n  /* The price for the room the user is curently booking a room for should be \n      easily accessible to user */\n  useEffect(() => {\n    const fetchRoomPrice = async () => {\n      try {\n        const res = await axios.get(`/rooms/${roomid}`);\n        const fetchedroom = await res.data;\n        setPrice(fetchedroom.price);\n        roomName.current = fetchedroom.name;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchRoomPrice();\n  }, [roomid]);\n\n  /* on day change trigger fetch function to get bookings for the day\n      (useEffect garantees that )*/\n  useEffect(() => {\n    fetchBookings(day);\n    setSelec(null);\n  }, [day, fetchBookings]);\n\n  /* When user clicks the confirm button the data should be sent to database\n      if the data is persisted successfully or not the user should be notified, \n      one way or the other. Insightful information should be displayed to help\n      user inform helpdesk of the issue*/\n  const onConfirm = useCallback(async () => {\n    try {\n      const req = await axios.post(\"/book\", {\n        booking_date: selected,\n        user_id: userid,\n        room_id: roomid,\n        price_at_booking: price,\n      });\n      console.log(req)\n      fetchBookings(day);\n      setData(req.data);\n      setshow(true);\n      // console.log(data)\n    } catch (err) {\n      setData(err.data);\n      setshow(true);\n    }\n  }, [day, fetchBookings, price, roomid, selected, userid]);\n\n  const handleClose = ()=> setshow(false);\n\n  /* When user clicks cancel, the current selection should be nullified and \n      the timeslots cleared*/\n  const onCancel = useCallback(() => {\n    setSelec(null);\n    fetchBookings(day);\n  }, [day, fetchBookings]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n        <Row>\n          {differenceInDays(startOfMonth(maxDay.current), currDay.current) < 0 ? \n          (\n            <DayPicker\n              canChangeMonth={false}\n              selectedDays={day}\n              onDayClick={handleDayClick}\n              disabledDays={{\n                before: currDay.current,\n                after: maxDay.current,\n              }}\n            />\n          ) : (\n            <DayPicker\n              selectedDays={day}\n              onDayClick={handleDayClick}\n              disabledDays={{\n                before: currDay.current,\n                after: maxDay.current,\n              }}\n              fromMonth={currDay.current}\n              toMonth={maxDay.current}\n              fixedWeeks\n            />\n          )}\n        </Row>\n        <Row className=\"justify-content-md-center\">\n                        <span>Selected Day: {day.toDateString()}</span><br/>\n                        <span>Price: ${price}</span><br/>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n                        <p className=\"font-weight-bold\">Selected: </p><br/>\n                        <p className=\"font-weight-bold \">{!selected ? null : selected.toDateString()}</p>\n                        <p className=\"font-weight-bold \">{!selected ? null : `at ${selected.getUTCHours()}:00`}</p>\n        </Row>\n        </Col>\n        <Col className=\"mt-4 justify-content-md-center\">\n          <Row className=\"mb-4\"><span className=\"font-weight-bold\">Choose available timeslot below</span></Row>\n          <Row><TimePicker bookings={bookings} timeSelected={timeSelected} maintenance={false} day={day}/></Row>\n          \n        </Col>\n      </Row>\n\n      {!selected ? (\n        <Row className=\"mt-4\">\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"primary\" size=\"lg\" disabled>\n              Confirm\n            </Button>\n          </Col>\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"secondary\" size=\"lg\" disabled>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      ) : (\n        <Row className=\"mt-4\">\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"primary\" size=\"lg\" onClick={onConfirm}>\n              Confirm\n            </Button>\n          </Col>\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"secondary\" size=\"lg\" onClick={onCancel}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      )}\n      <Modal \n        show={show} \n        onHide={handleClose}\n        backdrop=\"static\"\n      >\n        <Modal.Header>\n          <strong>{data.title}</strong><br/>\n        </Modal.Header>\n        <Modal.Body>\n          {data === undefined ?\n            <p>`Application Error, please contact admin. Error: server response undefined`</p>\n            :\n            (data.error ? \n              <div>\n                <strong>{data.message}, please inform the administrator.</strong>\n                <div className=\"p-3 mb-2 bg-danger text-white\">Booking Error</div> \n              </div>\n              :\n              <div>\n                <p>{roomName.current} was successfully reserved at {data.message}</p>\n                <div className=\"p-3 mb-2 bg-success text-white\">Booking ok</div>\n              </div>)\n          }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>Dismiss</Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Scheduler;\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"./ModalMessage.css\";\n\nconst ModalMessage = (props) => {\n  const [show, setShow] = useState(true);\n  const { closeModalMessage, user } = props;\n\n  const handleClose = () => {\n    setShow(false);\n    closeModalMessage();\n  };\n\n  return (\n    <Modal\n      className={\"modal-message\"}\n      onHide={handleClose}\n      show={show}\n      // fullscreen={\"lg-down\"}\n      backdrop=\"static\"\n      keyboard={false}\n      centered\n    >\n      <Modal.Header closeButton></Modal.Header>\n      <Modal.Body>\n        {`User ${user.user.first_name} ${user.user.last_name} access was changed to:`}\n        <p>{`${user.active ? \"AUTHORIZED\" : \"NON-AUTHORIZED\"}.`}</p>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ModalMessage;\n","// CUSTOM TABLE DATA COMPONENT: renders a table of data\n// Props:\n// values =  array of objects to be displayed\n// headers =  array of headers\n// columns =  array of columns (headers and columns must be in the same order)\n// whenClicked = a callback to do something when clicking in a row\n// customColumn = renders a custom column element (eg.: the activate green/red button)\n\nimport React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst TableData = ({ values, whenClicked, customColumn, ...props }) => {\n  return (\n    <Table bordered responsive hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>#</th>\n          {props.headers.map((head, index) => (\n            <th key={index}>{head}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {values.map((user, index) => (\n          <tr style={{ cursor: \"pointer\" }} key={index}>\n            <td onClick={() => whenClicked(user)}>{index + 1}</td>\n\n            {props.columns.map((colName, index) => {\n              switch (colName) {\n                case \"fullname\":\n                  return (\n                    <td\n                      onClick={() => whenClicked(user)}\n                      key={index}\n                    >{`${user.first_name} ${user.last_name}`}</td>\n                  );\n\n                // Custom Column data: returns a custom component passed in the props\n                // repeat for any future customized column component\n                case \"activeAuthorize\":\n                  const { customColumnComp } = customColumn.find(\n                    (fnc) => fnc.colDesc === \"activeAuthorize\"\n                  );\n                  return <td key={index}>{customColumnComp(user)}</td>;\n\n                default:\n                  return (\n                    <td onClick={() => whenClicked(user)} key={index}>\n                      {user[colName]}\n                    </td>\n                  );\n              }\n            })}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default TableData;\n","import React from \"react\";\nimport { Spinner, Modal } from \"react-bootstrap\";\nimport \"./SpinnerLoading.css\";\n\nconst SpinnerLoading = (props) => {\n  return (\n    <Modal\n      className={\"data-loading-modal\"}\n      show={true}\n      // fullscreen={\"lg-down\"}\n      backdrop=\"static\"\n      keyboard={false}\n      centered\n    >\n      <Modal.Body>\n        <p>{props.message}</p>\n        <Spinner animation=\"border\" className=\"data-loading-spinner\" />\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default SpinnerLoading;\n","import React, { useState } from \"react\";\nimport SpinnerLoading from \"../../shared/spinner/SpinnerLoading\";\n\nconst WithLoadingSpinner = (WrappedComponent, loadingMessage) => {\n  const HOC = (props) => {\n    const [isLoading, setLoading] = useState(false);\n    const [message, setMessage] = useState();\n\n    const setLoadingState = (isComponentLoading, message) => {\n      setLoading(isComponentLoading);\n      if (message) {\n        setMessage(message);\n      }\n    };\n\n    return (\n      <>\n        {isLoading && (\n          <SpinnerLoading message={message ? message : loadingMessage} />\n        )}\n        <WrappedComponent {...props} setLoadingSpinner={setLoadingState} />\n      </>\n    );\n  };\n  return HOC;\n};\n\nexport default WithLoadingSpinner;\n","import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst WithMessage = (WrappedComponent) => {\n  const HOC = (props) => {\n    const [showMessage, setShowMessage] = useState(false);\n    const [messageHeader, setMessageHeader] = useState();\n    const [messageBody, setMessageBody] = useState();\n    const [redirectUrl, setRedirect] = useState();\n    const [callBack, setCallBack] = useState();\n\n    const history = useHistory();\n\n    const setModalMessage = (\n      showMessage,\n      header,\n      message,\n      redirect,\n      callback\n    ) => {\n      setShowMessage(showMessage);\n      setMessageHeader(header);\n      setMessageBody(message);\n      setRedirect(redirect);\n      setCallBack(callback);\n    };\n\n    const MessageModal = () => {\n      const handleButton = () => {\n        if (callBack) {\n          if (redirectUrl) {\n            history.push(redirectUrl);\n          }\n          callBack.callBack();\n        } else if (redirectUrl) {\n          history.push(redirectUrl);\n        } else {\n          setShowMessage(false);\n        }\n      };\n\n      if (showMessage) {\n        return (\n          <Modal\n            size=\"lg\"\n            show={showMessage}\n            fullscreen={\"lg-down\"}\n            backdrop=\"static\"\n            keyboard={false}\n            centered\n          >\n            <Modal.Header>\n              <Modal.Title className=\"text-secondary\">\n                {messageHeader}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{messageBody}</Modal.Body>\n            <Modal.Footer className=\"justify-content-center\">\n              <Button variant=\"secondary\" onClick={handleButton}>\n                Continue\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        );\n      }\n    };\n\n    return (\n      <>\n        {showMessage && <MessageModal />}\n        <WrappedComponent {...props} setModalMessage={setModalMessage} />\n      </>\n    );\n  };\n  return HOC;\n};\n\nexport default WithMessage;\n","import React from \"react\";\nimport { ErrorMessage, useField } from \"formik\";\n\n// Custom Form component (currently, works for input and select)\n// Implements form validation through Formik\nexport const FormField = ({ label, formType, formData, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className=\"mb-3\">\n      <label ref={props.myref} htmlFor={field.name}>\n        {label}\n      </label>\n      {formType === \"input\" ? (\n        <input\n          className={`form-control shadow-none ${\n            meta.touched && meta.error && \"is-invalid\"\n          }`}\n          {...field}\n          {...props}\n          autoComplete=\"off\"\n        />\n      ) : (\n        <select\n          className={`form-control shadow-none ${\n            meta.touched && meta.error && \"is-invalid\"\n          }`}\n          {...field}\n          {...props}\n          autoComplete=\"off\"\n        >\n          {formData.map((opt, idx) => {\n            return <option key={idx}>{opt}</option>;\n          })}\n        </select>\n      )}\n      <ErrorMessage\n        component=\"div\"\n        name={field.name}\n        className=\"error small text-danger \"\n      />\n    </div>\n  );\n};\n","import { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { FormField } from \"../shared/form-components/FormField\";\nimport \"./LoginForm.css\";\nimport axios from \"axios\";\nimport WithMessage from \"../HOC/modal-messages/WithMessage\";\nimport WithLoadingSpinner from \"../HOC/loading-spinner/WithLoadingSpinner\";\n\nconst LoginForm = (props) => {\n  //--- *Yup* validation schema ---//;\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(8, \"Password must be at least 8 charaters\")\n      .required(\"Required\"),\n  });\n\n  // ------- HANDLE LOGIN SUBMIT ------ //\n\n  const history = useHistory();\n\n  const { setLoadingSpinner, setModalMessage, redirectTo } = props;\n\n  const handleLoginSubmit = async (values, { setFieldError }) => {\n    setLoadingSpinner(true, \"Logging in...\");\n\n    try {\n      const response = await axios.post(\"/authentication/login\", values);\n\n      response.data = { ...response.data, display: false };\n      const { success, message, type, active } = response.data;\n\n      setLoadingSpinner(false);\n\n      // if login response is successfull but user is NOT activated\n      if (!active && success) {\n        setModalMessage(\n          true,\n          \"User is not Activated\",\n          \"Your application is currently under review by our team. This process may take up to 48 hours to be concluded. Please, try again later.\",\n          \"/\",\n          { callBack: () => props.handlemodal() }\n        );\n\n        // If login response is successfull and user IS ACTIVATED\n      } else if (success) {\n        props.handlemodal();\n        console.log(\"CHECK\");\n        console.log(redirectTo);\n        history.push({\n          pathname: redirectTo,\n          state: { ...response.data, display: true },\n        });\n        history.go(`/dashboard`);\n\n        // If login response is NOT successfull\n      } else {\n        // if is a email/password problem...\n        if (type === \"form\") {\n          setFieldError(\"password\", message);\n          setFieldError(\"email\", \" \");\n\n          // any other error...\n        } else {\n          setModalMessage(\n            true,\n            \"Something went wrong\",\n            \"Could not log in at this time. Please try again in a few minutes.\",\n            \"/\",\n            { callBack: () => props.handlemodal() }\n          );\n        }\n      }\n    } catch (e) {\n      setLoadingSpinner(false);\n      setModalMessage(\n        true,\n        \"Something went wrong\",\n        \"Could not log in at this time. Please try again in a few minutes.\",\n        \"/pricing\",\n        { callBack: () => props.handlemodal() }\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleLoginSubmit}\n    >\n      {(formik) => (\n        <div className=\"login-container\">\n          <Form>\n            <FormField\n              formType=\"input\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"example@email.com\"\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n            />\n            <div className=\"login-forgotPassword\">\n              <a href=\"/redefine\">Forgot password?</a>\n            </div>\n\n            <button\n              className=\"login-form-btn btn btn-block btn-outline-primary mt-3 mb-3\"\n              type=\"submit\"\n            >\n              Continue\n            </button>\n\n            <hr />\n            <div className=\"login-form-footer\">\n              <p className=\"text-right\">\n                Don't have an account?{\" \"}\n                <span className=\"login-form-signup-link\">\n                  <a href=\"/signup\">Sign up</a>\n                </span>\n              </p>\n            </div>\n          </Form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default WithLoadingSpinner(WithMessage(LoginForm));\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport LoginForm from \"./LoginForm\";\n\nconst LoginModal = (props) => {\n  return (\n    <Modal\n      size=\"sm\"\n      show={props.showmodal}\n      fullscreen={\"sm-down\"}\n      className=\"text-left text-secondary\"\n      onHide={props.handlemodal}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Login</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <LoginForm\n          showmodal={props.showmodal}\n          handlemodal={props.handlemodal}\n          handleAuthState={props.handleAuthState}\n          redirectTo={props.redirectTo}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginModal from \"../login/LoginModal\";\n\nconst Error = (props) => {\n  const [message, setMessage] = useState();\n  const [header, setHeader] = useState();\n\n  const history = useHistory();\n  const state = history.location.state;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const handleLoginModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const errorType = useCallback(() => {\n    if (props) {\n      if (props.type === \"404\") {\n        setHeader(\"404 - Page not found\");\n        setMessage(\"We're sorry, we couldn't find the page you requested.\");\n      } else if (props.type === \"401\") {\n        console.log(\"401\");\n        setShowModal(true);\n        // handleLoginModal()\n        setHeader(\"401 - Not Authorized\");\n        setMessage(\n          \"You don't have authorization to access this resource. Please, log in into your account.\"\n        );\n      } else if (props.type === \"403\") {\n        setHeader(\"403 - Forbidden\");\n        setMessage(\"You don't have permissions to access this resource.\");\n      }\n    } else if (state) {\n      if (state.type === \"404\") {\n        setHeader(\"404 - Page not found\");\n        setMessage(\"We're sorry, we couldn't find the page you requested.\");\n      } else if (state.type === \"401\") {\n        setHeader(\"401 - Not Authorized\");\n        setMessage(\n          \"You don't have authorization to access this resource. Please, log in into your account.\"\n        );\n      } else if (state.type === \"403\") {\n        setHeader(\"403 - Forbidden\");\n        setMessage(\"You don't have permissions to access this resource.\");\n      }\n    } else {\n      setHeader(\"404 - Page not found\");\n      setMessage(\"We're sorry, we couldn't find the page you requested.\");\n    }\n\n    // if (!state || !props) {\n    //   setHeader(\"404 - Page not found\");\n    //   setMessage(\"We're sorry, we couldn't find the page you requested.\");\n    // } else if (\n    //   (state && (state.type === 401 || state.type === \"401\")) ||\n    //   (props && props.type === \"401\")\n    // ) {\n    //   setHeader(\"401 - Not Authorized\");\n    //   setMessage(\n    //     \"You don't have authorization to access this resource. Please, log in into your account.\"\n    //   );\n    // } else if (\n    //   (state && (state.type === 403 || state.type === \"403\")) ||\n    //   (props && props.type === \"403\")\n    // ) {\n    //   setHeader(\"403 - Forbidden\");\n    //   setMessage(\"You don't have permissions to access this resource.\");\n    // }\n  }, [state, props]);\n\n  useEffect(() => {\n    errorType();\n  }, [errorType]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Container className=\"m-4\">\n      <h2>{header}</h2>\n      <p>{message}</p>\n      {/* <Button\n        className=\"m-4\"\n        onClick={() => history.push(history.location.state.from)}\n        variant=\"secondary\"\n      >\n        Return\n      </Button> */}\n\n      <LoginModal\n        showmodal={showModal}\n        handlemodal={handleLoginModal}\n        redirectTo={history.location.pathname}\n      />\n    </Container>\n  );\n};\n\nexport default Error;\n","// Renders the authorization page component\n\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport {\n  Container,\n  Dropdown,\n  DropdownButton,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ModalMessage from \"./modal-message/ModalMessage\";\nimport TableData from \"../shared/table_data/TableData\";\nimport \"./UserList.css\";\nimport { useHistory } from \"react-router\";\nimport WithLoadingSpinner from \"../HOC/loading-spinner/WithLoadingSpinner\";\nimport WithMessage from \"../HOC/modal-messages/WithMessage\";\nimport Error from \"../error-pages/Error\";\n\nconst UserAuthorization = (props) => {\n  // ------------- LOADING ------------- //\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // props from HOC to set loading spinner\n  const { setLoadingSpinner, setModalMessage } = props;\n\n  const dataIsLoaded = useRef(false);\n\n  // ------------- FETCH DATA ------------- //\n  // to store all user data fetched from DB\n  const [values, setValues] = useState();\n  const [pendingCount, setPendingCount] = useState();\n  const [error, setError] = useState(false);\n\n  // (3) get all user data from database\n  const fetchData = useCallback(\n    async (key) => {\n      setLoadingSpinner(true);\n      try {\n        const data = await axios.get(\"/users\");\n        let sortedData = data.data.sort((a, b) =>\n          a.first_name.toLowerCase() > b.first_name.toLowerCase() ? 1 : -1\n        );\n        if (key === \"authorized\") {\n          setValues(sortedData.filter((user) => user.active === true));\n        } else if (key === \"pending\") {\n          setValues(sortedData.filter((user) => user.active === false));\n        } else {\n          setValues(sortedData);\n        }\n        setLoadingSpinner(false);\n\n        // count number of pending values\n        let countPending = sortedData.filter(\n          (user) => user.active === false\n        ).length;\n        setPendingCount(countPending);\n      } catch (err) {\n        setLoadingSpinner(false);\n\n        if (err.response && err.response.status === 403) {\n          setError(true);\n        } else {\n          setModalMessage(\n            true,\n            \"Something went wrong\",\n            \"The list of users couldn't be retrieved because the server is not responding. Please, try again.\",\n            \"/\"\n          );\n        }\n      }\n    },\n    [setLoadingSpinner, setModalMessage]\n  );\n\n  useEffect(() => {\n    if (!dataIsLoaded.current) {\n      fetchData();\n      dataIsLoaded.current = true;\n    }\n  }, [fetchData]);\n\n  // ------------- TABS COMPONENT ------------- //\n  // key is the name of each tab: all users, authorized, pending\n  const [key, setKey] = useState(\"all\");\n  const keyChanged = useRef(false);\n\n  const handleKey = (e) => {\n    setKey(e);\n    keyChanged.current = true;\n  };\n\n  // re-fetch data each time we change to a different tab, except during initialization\n  // because this will be done by the first fetchData call\n  useEffect(() => {\n    if (keyChanged.current) {\n      fetchData(key);\n      keyChanged.current = false;\n    }\n  }, [fetchData, key]);\n\n  // -------------  AUTHORIZATION/ACTIVE BUTTON  ------------- //\n  // this will handle the logic for updating the active status\n\n  // initial state for a user object.\n  // changeFlag is used as a flag/toggler to track if change to userToActivate was requested\n  const initialState = { user: {}, active: null, changeFlag: true };\n\n  // this represent the state of a user object (one row from the table)\n  const [userToActivate, setUserToActivate] = useState(initialState);\n\n  // this is to store the state for showing a modal message after updating a user\n  const [showModalMessage, setShowModalMessage] = useState(false);\n\n  // this is to close the modal after clicking\n  const closeModalMessage = () => {\n    setShowModalMessage(false);\n  };\n\n  // this will change the userToActivate object\n  // and as a consequence, it will trigger the useEffect to perform the PATCH request\n  const updateActiveOnDB = (user, activeStatus) => {\n    setUserToActivate({ user: user, active: activeStatus, changeFlag: false });\n  };\n\n  // when there is any change to userToActivate, this useEffect will perform the PATCH request\n  // it checks if user was changed (changeFlag), then send a patch request to the DB\n  // then set to true to show the modal message (eg: user <xxx> is authorized...)\n  // then fetch the data again to display the updated table\n\n  const userId = userToActivate.user._id;\n  const activeUserStatus = userToActivate.active;\n\n  const patchUser = useCallback(async () => {\n    await axios.patch(\n      `/users/update_authorize/${userId}`,\n      {\n        active: activeUserStatus,\n      }\n    );\n    setShowModalMessage(true);\n    await fetchData(key);\n  }, [userId, activeUserStatus, key, fetchData]);\n\n  useEffect(() => {\n    if (!userToActivate.changeFlag) {\n      patchUser();\n      setUserToActivate({ ...userToActivate, changeFlag: true });\n    }\n  }, [userToActivate, patchUser]);\n\n  // This is to display the GREEN/RED button and DROPDOWN for the Active column\n  // it returns a single cell component that can be passed inside a row\n  const customActiveColumn = (user) => {\n    return (\n      <Dropdown className=\"btn-active-dropdown-container\">\n        <DropdownButton\n          className={\n            user.active\n              ? \"btn-active-dropdown-green\"\n              : \"btn-active-dropdown-red\"\n          }\n          title={<i className=\"fas fa-circle\"></i>}\n          drop=\"end\"\n          size=\"sm\"\n          variant=\"secondary\"\n        >\n          <Dropdown.Item onClick={() => updateActiveOnDB(user, true)}>\n            Authorize\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => updateActiveOnDB(user, false)}>\n            Deny\n          </Dropdown.Item>\n        </DropdownButton>\n      </Dropdown>\n    );\n  };\n\n  // -------------  REDIRECTION  ------------- //\n\n  // Get current URL\n  const history = useHistory();\n\n  const displayUser = (user) => {\n    const path = `/dashboard/user/${user._id}`;\n    history.push(path);\n  };\n\n  // rendering the component...\n  // (1) - Check if there is data (values) to show, otherwise, null\n  //       then check if showModalMessage=true (show message \"user xxx was authorized....\")\n  // (2) - This component is a modal with the message (\"user xxx authorized...\")\n  //       it passes as props the user in the row that was clicked (userToActivate)\n  //       and also a callback to let this component know that the modal was closed\n  // (3) - Uses react-bootstrap Tabs components. Key is used to track if Tab was changed\n  //       with useEffect(), to fetch and filter data accordingly\n  // (4) - Customized table component\n\n  if (error === true) {\n    return <Error />;\n  }\n\n  return (\n    <Container>\n      {/* (1) */}\n      {values ? (\n        showModalMessage ? (\n          /* (2) */\n          <ModalMessage\n            user={userToActivate}\n            closeModalMessage={closeModalMessage}\n          />\n        ) : (\n          /* (3) */\n          <>\n            <Tabs\n              className=\"users-filter-tab mb-4\"\n              activeKey={key}\n              onSelect={(e) => handleKey(e)}\n            >\n              <Tab eventKey=\"all\" title=\"All users\"></Tab>\n              <Tab eventKey=\"authorized\" title=\"Authorized\"></Tab>\n              <Tab\n                eventKey=\"pending\"\n                title={\n                  pendingCount > 0 ? (\n                    <span>\n                      Pending\n                      <span\n                        style={{\n                          color: \"red\",\n                          fontSize: \"0.80rem\",\n                          verticalAlign: \"super\",\n                        }}\n                      >{` (${pendingCount})`}</span>\n                    </span>\n                  ) : (\n                    `Pending`\n                  )\n                }\n              ></Tab>\n            </Tabs>\n\n            {/* (4) */}\n\n            <TableData\n              headers={[\"Name\", \"CRP Number\", \"Email\", \"Active\"]}\n              columns={[\"fullname\", \"crp_no\", \"email\", \"activeAuthorize\"]}\n              values={values}\n              whenClicked={displayUser}\n              customColumn={[\n                {\n                  colDesc: \"activeAuthorize\",\n                  customColumnComp: customActiveColumn,\n                },\n              ]}\n            />\n          </>\n        )\n      ) : null}\n    </Container>\n  );\n};\n\nexport default WithLoadingSpinner(\n  WithMessage(UserAuthorization),\n  \"Loading authorization list\"\n);\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// hook to check if user is or is not authenticated in the server\nconst useAuthentication = () => {\n  const [isAuth, setAuth] = useState(false);\n  const [data, setData] = useState();\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getAuth = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get(\"/authentication\");\n\n        if (res.data.error === false) {\n          setAuth(true);\n          setData(res.data.userData);\n        } else {\n          throw new Error();\n        }\n      } catch (err) {\n        setAuth(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getAuth();\n  }, []);\n\n  return { isAuth, data, isLoading };\n};\n\nexport default useAuthentication;\n","import { useState } from \"react\";\nimport { Offcanvas, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WithLoadingSpinner from \"../../HOC/loading-spinner/WithLoadingSpinner\";\nimport \"./Sidebar.css\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as MdIcons from \"react-icons/md\";\nimport * as BsIcons from \"react-icons/bs\";\nimport * as IoIcons from \"react-icons/io5\";\nimport * as FiIcons from \"react-icons/fi\";\nimport * as GoIcons from \"react-icons/go\";\n\nfunction Sidebar(props) {\n  // for redirection after logout\n  const history = useHistory();\n\n  // logout handler to destroy session in server\n  const handleLogout = async () => {\n    props.setLoadingSpinner(true, \"Logging out...\");\n    try {\n      const logout = await axios.get(\"/authentication/logout\");\n      if (logout.status === 200) {\n        history.push(\"/\");\n        history.go(\"/\");\n        console.log(\"LOGOUT\");\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      props.setLoadingSpinner(false);\n    }\n  };\n\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    setShow(false);\n    props.resize(false);\n  };\n  const toggleShow = () => {\n    setShow((s) => !s);\n    props.resize(true);\n  };\n\n  const SideBarBody = () => {\n    return (\n      <ul className=\"nav-menu-items\" onClick={null}>\n        <li className=\"nav-text\">\n          <Link to={`/dashboard`}>\n            <AiIcons.AiFillHome />\n            <span>Home</span>\n          </Link>\n        </li>\n        <li className=\"nav-text\" onClick={null}>\n          <Link to={`/dashboard/user/${props.id}`}>\n            <AiIcons.AiOutlineUser />\n            <span>Profile</span>\n          </Link>\n        </li>\n        <li className=\"nav-text\" onClick={null}>\n          <Link to=\"/dashboard/book\">\n            <BsIcons.BsCalendar3 />\n            <span>Bookings</span>\n          </Link>\n        </li>\n        <li className=\"nav-text\" onClick={null}>\n          <Link to=\"/dashboard/bookinglist\">\n            <IoIcons.IoList />\n            <span>Booking List</span>\n          </Link>\n        </li>\n        {props.isAdmin && (\n          <li className=\"nav-text\" onClick={null}>\n            <Link to=\"/dashboard/report\">\n              <IoIcons.IoDocumentTextOutline />\n              <span>Reports</span>\n            </Link>\n          </li>\n        )}\n        <li className=\"nav-text\" onClick={null}>\n          <Link to={`/dashboard/user/${props.id}/changePassword`}>\n            <MdIcons.MdOutlinePassword />\n            <span>Security</span>\n          </Link>\n        </li>\n        {props.isAdmin && (\n          <li className=\"nav-text\" onClick={null}>\n            <Link to={`/dashboard/${props.id}/authorization`}>\n              <FiIcons.FiCheckSquare />\n              <span>Authorize</span>\n            </Link>\n          </li>\n        )}\n        <li className=\"nav-text\">\n          <Link to=\"#\" onClick={handleLogout}>\n            <GoIcons.GoSignOut />\n            <span>Sign Out</span>\n          </Link>\n        </li>\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"dashboard-button-container\">\n        <Button\n          variant=\"secondary\"\n          onClick={toggleShow}\n          className=\"dashboard-button me-2\"\n        >\n          Dashboard Menu\n          <BsIcons.BsBoxArrowUp className=\"dashboard-icon\" />\n        </Button>\n      </div>\n      <Offcanvas\n        show={show}\n        onHide={handleClose}\n        scroll={true}\n        backdrop={false}\n        className=\"offcanvas-container\"\n      >\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title className=\"dashboard-title text-secondary\">\n            Dashboard\n          </Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          <hr />\n          <SideBarBody />\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nexport default WithLoadingSpinner(Sidebar);\n","export const state_uf_data = [\n  \"Choose...\",\n  \"AC - Acre\",\n  \"AL - Alagoas\",\n  \"AP - Amapá\",\n  \"AM - Amazonas\",\n  \"BA - Bahia\",\n  \"CE - Ceará\",\n  \"DF - Distrito Federal\",\n  \"ES - Espírito Santo\",\n  \"GO - Goías\",\n  \"MA - Maranhão\",\n  \"MT - Mato Grosso\",\n  \"MS - Mato Grosso do Sul\",\n  \"MG - Minas Gerais\",\n  \"PA - Pará\",\n  \"PB - Paraíba\",\n  \"PR - Paraná\",\n  \"PE - Pernambuco\",\n  \"PI - Piauí\",\n  \"RJ - Rio de Janeiro\",\n  \"RN - Rio Grande do Norte\",\n  \"RS - Rio Grande do Sul\",\n  \"RO - Rondônia\",\n  \"RR - Roraíma\",\n  \"SC - Santa Catarina\",\n  \"SP - São Paulo\",\n  \"SE - Sergipe\",\n  \"TO - Tocantins\",\n];\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\n\n// hook to check if user is or is not authenticated in the server\nconst useFetchUser = (id) => {\n  const [isLoading, setLoading] = useState(true);\n  const [fetchedUser, setUser] = useState();\n  const [error, setError] = useState({ status: false, type: \"\" });\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`/users/${id}`);\n\n        // redirects to error page\n        if (response.data.error) {\n          setError({\n            status: true,\n            type: response.data.type.toString(),\n          });\n        }\n\n        // if user._id exist, set user.\n        if (response.data._id) {\n          setUser(response.data);\n        }\n\n        // errors including response.status != 200 to 299\n      } catch (error) {\n        setError({\n          status: true,\n          type: error.response.status.toString(),\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUser(); // call above function here\n  }, [history, id]);\n\n  return { fetchedUser, isLoading, error };\n};\n\nexport default useFetchUser;\n","import { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { FormField } from \"../../shared/form-components/FormField\";\nimport { state_uf_data } from \"../../sign_up/sign_up-form/state_uf_data\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./UserProfile.css\";\nimport { useHistory } from \"react-router-dom\";\nimport useFetchUser from \"../../shared/hook/useFetchUser\";\nimport SpinnerLoading from \"../../shared/spinner/SpinnerLoading\";\nimport Error from \"../../error-pages/Error\";\nimport WithMessage from \"../../HOC/modal-messages/WithMessage\";\n\nconst UserProfile = (props) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  // --- This will handle the autocomplete delimiters in form ---/\n  const [phoneDelimiter, setPhoneDelimiter] = useState(false);\n\n  const { fetchedUser, isLoading, error } = useFetchUser(props.id);\n\n  const phoneDelimiterHandle = () => {\n    const { phone } = formRef.current.values;\n    if (phone.length === 2 && !phoneDelimiter) {\n      formRef.current.setFieldValue(\"phone\", phone + \"-\");\n      setPhoneDelimiter(true);\n    } else if (phone.length === 8 && !phoneDelimiter) {\n      formRef.current.setFieldValue(\"phone\", phone + \"-\");\n      setPhoneDelimiter(true);\n    } else {\n      setPhoneDelimiter(false);\n    }\n  };\n\n  //--- *Yup* validation schema ---/\n  const validationSchema = Yup.object().shape({\n    phone: Yup.string()\n      .min(12, \"Phone number is invalid\")\n      .required(\"Phone number is required\")\n      .matches(/^[0-9]{2}-[0-9]{5}-[0-9]{4}$/, \"Invalid phone format\"),\n    dob: Yup.date().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    state: Yup.string().required(\"Required\"),\n    zip: Yup.string().required(\"Required\"),\n    address1: Yup.string().required(\"Required\"),\n    address2: Yup.string().required(\"Required\"),\n  });\n\n  //---- This will handle address auto-complete when Zip is entered ----/\n  // It fetches address data from an external API\n  // then it saves fetched data into respective formik field values\n  const handleFetchZip = async () => {\n    const cep = formRef.current.values.zip;\n    if (cep.length >= 8) {\n      try {\n        axios.get(`https://viacep.com.br/ws/${cep}/json/ `).then((res) => {\n          if (!res.data.erro) {\n            let state_uf = state_uf_data.find(\n              (uf) => uf.substring(0, 2).search(res.data.uf) >= 0\n            );\n\n            formRef.current.setFieldValue(\"city\", res.data.localidade);\n            formRef.current.setFieldValue(\"state\", state_uf);\n            formRef.current.setFieldValue(\"address1\", res.data.logradouro);\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  // --- Handle error response from backend POST --- //\n  // uses useRef to scrool up to the field with problems (email, crp, etc...)\n  const formRef = useRef();\n\n  // --- Redirects --- //\n  // enables history object: allows redirection after POST\n  let history = useHistory();\n\n  const { setModalMessage } = props;\n\n  // ---- Handle form submit ---- //\n  const handleSubmitForm = async (values) => {\n    // Fetch data from API\n    try {\n      const response = await axios({\n        method: \"put\",\n        url: `/users/edit/${values._id}`,\n        data: values,\n      });\n\n      // include display property and set to false\n      response.data = { ...response.data, display: false };\n\n      // destructuring the response data from API\n      const { success, redirectURL } = response.data;\n\n      if (success) {\n        setModalMessage(true, \"Success\", \"User successfully updated.\");\n        //window.scrollTo(0, 0);\n      } else {\n        history.push({\n          pathname: redirectURL,\n          state: { ...response.data, display: true },\n        });\n      }\n\n      // if API call fails, shows an error message and redirects\n    } catch (e) {\n      history.push({\n        pathname: `dashboard/user/${values._id}`,\n        state: {\n          message: \"Something went wrong\",\n          display: true,\n        },\n      });\n    }\n  };\n\n  const handleAdminDisabled = () => {\n    if (fetchedUser._id === props.user._id) {\n      return false;\n    } else if (props.user.isAdmin && fetchedUser._id === props.user._id) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  if (isLoading) {\n    return <SpinnerLoading message=\"Loading profile...\" />;\n  }\n  if (error.status === true) {\n    return <Error type={error.type} />;\n  }\n\n  return (\n    <div className=\"p-3 py-5\">\n      <div className=\"d-flex justify-content-between mb-3\">\n        <h4>\n          {fetchedUser.first_name} {fetchedUser.last_name}\n        </h4>\n        {fetchedUser.active && (\n          <div>\n            Account Status:{\" \"}\n            <span className=\"badge badge-pill badge-success ml-2\">Active</span>\n          </div>\n        )}\n        {!fetchedUser.active && (\n          <div>\n            Account Status:{\" \"}\n            <span className=\"badge badge-pill bg-danger ml-2\">Inactive</span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"row mt-2\">\n        <Formik\n          innerRef={formRef}\n          initialValues={{\n            _id: fetchedUser._id,\n            crp_no: fetchedUser.crp_no,\n            phone: fetchedUser.phone,\n            email: fetchedUser.email,\n            dob: fetchedUser.dob,\n            zip: fetchedUser.zip,\n            city: fetchedUser.city,\n            state: fetchedUser.state,\n            address1: fetchedUser.address1,\n            address2: fetchedUser.address2,\n            cpf_no: fetchedUser.cpf_no,\n          }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmitForm}\n        >\n          {(formik) => (\n            <div className=\"signup-container\">\n              <Form>\n                <FormField\n                  formType=\"input\"\n                  label=\"CRP (region/number)\"\n                  name=\"crp_no\"\n                  type=\"text\"\n                  maxLength=\"8\"\n                  placeholder=\"00/00000\"\n                  disabled\n                />\n                <FormField\n                  formType=\"input\"\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"example@email.com\"\n                  disabled\n                />\n                <FormField\n                  formType=\"input\"\n                  label=\"Phone\"\n                  name=\"phone\"\n                  type=\"text\"\n                  maxLength=\"13\"\n                  placeholder=\"00-00000-0000\"\n                  onKeyUp={() => phoneDelimiterHandle()}\n                  disabled={handleAdminDisabled()}\n                />\n\n                <FormField\n                  formType=\"input\"\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  type=\"date\"\n                  disabled={handleAdminDisabled()}\n                />\n                <div className=\"form-row\">\n                  <div className=\"form-group col-md-3\">\n                    <FormField\n                      formType=\"input\"\n                      label=\"Zip\"\n                      type=\"text\"\n                      maxLength=\"8\"\n                      name=\"zip\"\n                      onKeyUp={(e) => handleFetchZip()}\n                      disabled={handleAdminDisabled()}\n                    />\n                  </div>\n\n                  <div className=\"form-group col-md-5\">\n                    <FormField\n                      formType=\"input\"\n                      label=\"City\"\n                      type=\"text\"\n                      maxLength=\"30\"\n                      name=\"city\"\n                      disabled={handleAdminDisabled()}\n                    />\n                  </div>\n\n                  <div className=\"form-group col-md-4\">\n                    <FormField\n                      label=\"State\"\n                      formType=\"select\"\n                      formData={state_uf_data}\n                      id=\"inputState\"\n                      className=\"form-control\"\n                      name=\"state\"\n                      disabled={handleAdminDisabled()}\n                    />\n                  </div>\n                </div>\n\n                <FormField\n                  formType=\"input\"\n                  label=\"Address\"\n                  name=\"address1\"\n                  type=\"text\"\n                  placeholder=\"Main St\"\n                  disabled={handleAdminDisabled()}\n                />\n                <FormField\n                  formType=\"input\"\n                  label=\"Address 2\"\n                  name=\"address2\"\n                  type=\"text\"\n                  placeholder=\"Number, Apartment, studio, or floor\"\n                  disabled={handleAdminDisabled()}\n                />\n\n                {handleAdminDisabled() === true ? null : (\n                  <>\n                    <button\n                      className=\"btn btn-outline-primary mt-3 mr-4 mb-4\"\n                      type=\"submit\"\n                    >\n                      Save Changes\n                    </button>\n                    <button\n                      className=\"btn btn-outline-danger mt-3 ml-3 mb-4\"\n                      type=\"reset\"\n                    >\n                      Reset Form\n                    </button>\n                  </>\n                )}\n              </Form>\n            </div>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default WithMessage(UserProfile);\n","import { useRef } from \"react\";\nimport axios from \"axios\";\nimport { FormField } from \"../../shared/form-components/FormField\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport useFetchUser from \"../../shared/hook/useFetchUser\";\nimport SpinnerLoading from \"../../shared/spinner/SpinnerLoading\";\nimport Error from \"../../error-pages/Error\";\nimport WithMessage from \"../../HOC/modal-messages/WithMessage\";\n\nconst ChangePasswordForm = (props) => {\n  const { fetchedUser, isLoading, error } = useFetchUser(props.id);\n\n  //--- *Yup* validation schema ---/\n  const validationSchema = Yup.object().shape({\n    password: Yup.string()\n      .min(8, \"Password must be at least 8 charaters\")\n      .required(\"Required\")\n      .matches(\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\n        \"Password must contain at least 8 characters, 1 uppercase, 1 lowercase, and 1 number.\"\n      ),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Password must match\")\n      .required(\"You must confirm your password\"),\n  });\n  // --- Handle error response from backend POST --- //\n  // uses useRef to scrool up to the field with problems (email, crp, etc...)\n  const formRef = useRef();\n\n  // --- Redirects --- //\n  // enables history object: allows redirection after POST\n  let history = useHistory();\n\n  const { setModalMessage } = props;\n  // ---- Handle form submit ---- //\n  const handleSubmitForm = async (values, { resetForm }) => {\n    // Fetch data from API\n    try {\n      const response = await axios({\n        method: \"put\",\n        url: `/authentication/${values._id}/changePassword`,\n        data: values,\n      });\n\n      // include display property and set to false\n      response.data = { ...response.data, display: false };\n\n      // destructuring the response data from API\n      const { success, redirectURL } = response.data;\n\n      if (success) {\n        setModalMessage(true, \"Success\", \"User password successfully updated.\");\n        //window.scrollTo(0, 0);\n        resetForm();\n      } else {\n        history.push({\n          pathname: redirectURL,\n          state: { ...response.data, display: true },\n        });\n      }\n\n      // if API call fails, shows an error message and redirects\n    } catch (e) {\n      history.push({\n        pathname: `dashboard/user/${values._id}/changePassword`,\n        state: {\n          message: \"Something went wrong\",\n          display: true,\n        },\n      });\n    }\n  };\n\n  if (isLoading) {\n    return <SpinnerLoading message=\"Loading profile...\" />;\n  }\n  if (error.status === true) {\n    return <Error type={error.type} />;\n  }\n\n  const handleAdminDisabled = () => {\n    if (fetchedUser._id === props.user._id) {\n      return false;\n    } else if (props.user.isAdmin && fetchedUser._id === props.user._id) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  return (\n    <div className=\"p-3 py-5\">\n      <div className=\"d-flex justify-content-between mb-3\">\n        <h4>\n          {fetchedUser.first_name} {fetchedUser.last_name}\n        </h4>\n      </div>\n\n      <div className=\"row mt-2\">\n        <Formik\n          innerRef={formRef}\n          initialValues={{\n            _id: fetchedUser._id,\n            password: \"\",\n            confirmPassword: \"\",\n          }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmitForm}\n        >\n          {(formik) => (\n            <div className=\"signup-container\">\n              <Form>\n                <FormField\n                  formType=\"input\"\n                  label=\"New Password\"\n                  name=\"password\"\n                  type=\"password\"\n                />\n                <FormField\n                  formType=\"input\"\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                />\n\n                {handleAdminDisabled() === true ? null : (\n                  <>\n                    <button\n                      className=\"btn btn-outline-primary mt-3 mr-4 mb-4\"\n                      type=\"submit\"\n                    >\n                      Save Changes\n                    </button>\n                    <button\n                      className=\"btn btn-outline-danger mt-3 ml-3 mb-4\"\n                      type=\"reset\"\n                    >\n                      Reset Form\n                    </button>\n                  </>\n                )}\n              </Form>\n            </div>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\nexport default WithMessage(ChangePasswordForm);\n","export const Timeslots = [\n  {\n    time: 8,\n    text: \"08:00 AM\",\n  },\n  {\n    time: 9,\n    text: \"09:00 AM\",\n  },\n  {\n    time: 10,\n    text: \"10:00 AM\",\n  },\n  {\n    time: 11,\n    text: \"11:00 AM\",\n  },\n  {\n    time: 13,\n    text: \"01:00 PM\",\n  },\n  {\n    time: 14,\n    text: \"02:00 PM\",\n  },\n  {\n    time: 15,\n    text: \"03:00 PM\",\n  },\n  {\n    time: 16,\n    text: \"04:00 PM\",\n  },\n  {\n    time: 17,\n    text: \"05:00 PM\",\n  },\n  {\n    time: 18,\n    text: \"06:00 PM\",\n  },\n  {\n    time: 19,\n    text: \"07:00 PM\",\n  },\n];\n","import React from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Timeslots } from \"./Timeslots.js\";\n\nconst UserQueryForm = ({ values, ...props }) => {\n  // Yup validation schema\n  const validationSchema = Yup.object().shape({\n    startDate: Yup.date(),\n    endDate: Yup.date().min(\n      Yup.ref(\"startDate\"),\n      \"Date must be equal or after start date\"\n    ),\n    startTime: Yup.number(),\n    endTime: Yup.number().min(\n      Yup.ref(\"startTime\"),\n      \"End must be equal or after start time\"\n    ),\n  });\n\n  const handleSubmit = (values) => {\n    const { name, room, startDate, startTime, endDate, endTime, sort } = values;\n    let query = `name=${name}&room=${room}&startDate=${startDate}&startTime=${startTime}&endDate=${endDate}&endTime=${endTime}&sort=${sort}`;\n    props.setQuery(query);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          room: 0,\n          startDate: \"\",\n          endDate: \"\",\n          sort: \"byName\",\n          startTime: 8,\n          endTime: 19,\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleSubmit, handleChange, errors, touched, isValid }) => (\n          <>\n            <Form noValidate onSubmit={handleSubmit}>\n              <Row className=\"mb-3\">\n                <Form.Group as={Col} xs={5} controlId=\"queryName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    name=\"name\"\n                    value={values.name}\n                    type=\"text\"\n                    size=\"sm\"\n                    placeholder=\"Filter by name\"\n                    onChange={handleChange}\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} xs={3} controlId=\"queryRoom\">\n                  <Form.Label>Room</Form.Label>\n                  <Form.Select\n                    aria-label=\"Room select\"\n                    size=\"sm\"\n                    name=\"room\"\n                    onChange={handleChange}\n                  >\n                    <option value={0}>All rooms</option>\n                    <option value=\"616610f8838d67d1fab083e9\">Room One</option>\n                    <option value=\"6166134d4eca734cbfd3a412\">Room Two</option>\n                    <option value=\"6166136e4eca734cbfd3a415\">Room Three</option>\n                  </Form.Select>\n                </Form.Group>\n              </Row>\n\n              <Row className=\"mb-3\">\n                <Form.Group as={Col} xs={4} controlId=\"queryStartDate\">\n                  <Form.Label>Start date</Form.Label>\n                  <Form.Control\n                    name=\"startDate\"\n                    type=\"date\"\n                    size=\"sm\"\n                    value={values.startDate}\n                    onChange={handleChange}\n                    isInvalid={!!errors.startDate}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.startDate}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} xs={4} controlId=\"queryStartTime\">\n                  <Form.Label>Start time</Form.Label>\n                  <Form.Select\n                    aria-label=\"Start time select\"\n                    size=\"sm\"\n                    name=\"startTime\"\n                    onChange={handleChange}\n                    isInvalid={!!errors.startTime}\n                  >\n                    <option value={8}>Select...</option>\n                    {Timeslots.map((t, index) => {\n                      return (\n                        <option key={index} value={t.time}>\n                          {t.text}\n                        </option>\n                      );\n                    })}\n                  </Form.Select>\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.startTime}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n\n              <Row className=\"mb-3\">\n                <Form.Group as={Col} xs={4} controlId=\"queryEndDate\">\n                  <Form.Label>End date</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    size=\"sm\"\n                    name=\"endDate\"\n                    value={values.endDate}\n                    onChange={handleChange}\n                    isInvalid={!!errors.endDate}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.endDate}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} xs={4} controlId=\"queryEndTime\">\n                  <Form.Label>End time</Form.Label>\n                  <Form.Select\n                    aria-label=\"End time select\"\n                    size=\"sm\"\n                    name=\"endTime\"\n                    onChange={handleChange}\n                    isInvalid={!!errors.endTime}\n                  >\n                    <option value={19}>Select...</option>\n                    {Timeslots.map((t, index) => {\n                      return (\n                        <option key={index} value={t.time}>\n                          {t.text}\n                        </option>\n                      );\n                    })}\n                  </Form.Select>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.endTime}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Form.Label>Sort by</Form.Label>\n                <Form.Group as={Col} xs={4} controlId=\"querySortBy\" key=\"radio\">\n                  <Form.Check\n                    inline\n                    label=\"Name\"\n                    name=\"sort\"\n                    type=\"radio\"\n                    id=\"byName\"\n                    value=\"byName\"\n                    onChange={handleChange}\n                    defaultChecked={true}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Date\"\n                    name=\"sort\"\n                    type=\"radio\"\n                    id=\"byDate\"\n                    value=\"byDate\"\n                    onChange={handleChange}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row className=\"row\">\n                <Form.Group as={Col} xs={2} className=\"text-left\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mt-4 mb-4\"\n                    variant=\"secondary\"\n                    size=\"sm\"\n                  >\n                    Get report\n                  </Button>\n                </Form.Group>\n                <Form.Group as={Col} xs={2} className=\"text-left\">\n                  {props.children}\n                </Form.Group>\n              </Row>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UserQueryForm;\n","// CUSTOM TABLE DATA COMPONENT: renders a table of data\n// Props:\n// values =  array of objects to be displayed\n// headers =  array of headers\n// columns =  array of columns (headers and columns must be in the same order)\n// whenClicked = a callback to do something when clicking in a row\n// customColumn = renders a custom column element (eg.: the activate green/red button)\n\nimport { React, useState, useEffect } from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\n\nconst TableData = ({\n  values,\n  whenClicked,\n  customColumn,\n  pagination,\n  paginationQuery,\n  ...props\n}) => {\n  const [pagActive, setPagActive] = useState(1);\n  const [currPage, setCurrPage] = useState();\n  const [changed, setChanged] = useState(true);\n\n  // calculates total of pages in pagination\n  const { max_rows, paginationTotal } = pagination;\n  let num_pages = Math.ceil(paginationTotal / max_rows);\n\n  // sets pagination item to active\n  const handlePagination = (e) => {\n    if (parseInt(e.target.id) !== pagActive) {\n      setChanged(true);\n      setPagActive(parseInt(e.target.id));\n    }\n  };\n\n  const handlePagFirstLast = (position) => {\n    if (position === \"last\" && pagActive < num_pages) {\n      setChanged(true);\n      setPagActive(num_pages);\n    } else if (position === \"first\" && pagActive > 1) {\n      setChanged(true);\n      setPagActive(1);\n    }\n  };\n\n  const handlePagNextPrev = (position) => {\n    if (position === \"next\" && pagActive < num_pages) {\n      setChanged(true);\n      setPagActive((prev) => prev + 1);\n    } else if (position === \"prev\" && pagActive > 1) {\n      setChanged(true);\n      setPagActive((prev) => prev - 1);\n    }\n  };\n\n  // updates the pagination\n  // returns pagination query to parent component via callback\n  useEffect(() => {\n    if (changed) {\n      paginationQuery(\n        `&startpage=${(pagActive - 1) * max_rows}&maxrows=${max_rows}`\n      );\n      setCurrPage(pagActive);\n      setChanged(false);\n    }\n  }, [pagActive, changed, paginationQuery, values, max_rows]);\n\n  // Create the pagination items\n  let items = [];\n  for (let number = 1; number <= num_pages; number++) {\n    items.push(\n      <Pagination.Item\n        onClick={handlePagination}\n        key={number}\n        active={number === pagActive}\n        id={number}\n      >\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  return (\n    <>\n      {values.length > 0 ? (\n        <>\n          <Table bordered responsive hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>#</th>\n                {props.headers.map((head, index) => (\n                  <th key={index}>{head}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {values.map((user, index) => (\n                <tr style={{ cursor: \"pointer\" }} key={index}>\n                  <td onClick={() => whenClicked(user)}>\n                    {((currPage - 1) * max_rows + index + 1).toString()}\n                  </td>\n\n                  {props.columns.map((colName, index) => {\n                    switch (colName) {\n                      case \"fullname\":\n                        return (\n                          <td\n                            onClick={() => whenClicked(user)}\n                            key={index}\n                          >{`${user.first_name} ${user.last_name}`}</td>\n                        );\n\n                      // Custom Column data: returns a custom component passed in the props\n                      // repeat for any future customized column component\n                      case \"activeAuthorize\":\n                        const { customColumnComp } = customColumn.find(\n                          (fnc) => fnc.colDesc === \"activeAuthorize\"\n                        );\n                        return <td key={index}>{customColumnComp(user)}</td>;\n\n                      case \"total\":\n                      case \"price\":\n                      case \"price_at_reservation\":\n                      case \"price_at_booking\":\n                        return (\n                          <td onClick={() => whenClicked(user)} key={index}>\n                            {new Intl.NumberFormat(\"pt-BR\", {\n                              style: \"currency\",\n                              currency: \"BRL\",\n                            }).format(user[colName])}\n                          </td>\n                        );\n\n                      case \"_isCancelled\":\n                        let cancelled;\n                        if (user[colName] === false) {\n                          cancelled = \"Active\";\n                        } else {\n                          cancelled = \"Cancelled\";\n                        }\n                        return (\n                          <td onClick={() => whenClicked(user)} key={index}>\n                            {cancelled}\n                          </td>\n                        );\n\n                      default:\n                        return (\n                          <td onClick={() => whenClicked(user)} key={index}>\n                            {user[colName]}\n                          </td>\n                        );\n                    }\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n\n          <div>\n            <Pagination>\n              <Pagination.First onClick={() => handlePagFirstLast(\"first\")} />\n              <Pagination.Prev onClick={() => handlePagNextPrev(\"prev\")} />\n              {items}\n              <Pagination.Next onClick={() => handlePagNextPrev(\"next\")} />\n              <Pagination.Last onClick={() => handlePagFirstLast(\"last\")} />\n            </Pagination>\n          </div>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default TableData;\n","import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport { Button } from \"react-bootstrap\";\nimport { format, parseISO } from \"date-fns\";\nimport WithMessage from \"../../HOC/modal-messages/WithMessage\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n// helper function to access nested object propertios by string\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  var a = s.split(\".\");\n  for (var i = 0, n = a.length; i < n; ++i) {\n    var k = a[i];\n    if (k in o) {\n      o = o[k];\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\nconst ExcelComponent = ({ columns, values, name, fileName, ...props }) => {\n  return (\n    <ExcelFile\n      filename={fileName}\n      element={\n        <Button\n          type=\"button\"\n          className=\"mt-4 mb-4\"\n          size=\"sm\"\n          variant=\"secondary\"\n        >\n          Export to Excel\n        </Button>\n      }\n    >\n      {!values ? null : (\n        <ExcelSheet data={values} name={name}>\n          <ExcelColumn label=\"#\" value={(item) => values.indexOf(item) + 1} />\n          {columns.map((col, index) => {\n            return (\n              <ExcelColumn\n                key={index}\n                label={col.label}\n                value={(item) => {\n                  switch (col.col) {\n                    case \"fullname\":\n                    case \"user.fullname\":\n                      if (item.user) {\n                        return `${item.user.first_name} ${item.user.last_name}`;\n                      } else {\n                        return `${item.first_name} ${item.last_name}`;\n                      }\n\n                    case \"total\":\n                    case \"price\":\n                    case \"price_at_reservation\":\n                    case \"price_at_booking\":\n                      return parseFloat(Object.byString(item, col.col));\n\n                    case \"lastBookingDate\":\n                    case \"booking_date\":\n                      return `${format(\n                        new Date(Object.byString(item, col.col)),\n                        \"dd-LLL-y, iii\"\n                      )} at ${parseISO(\n                        Object.byString(item, col.col)\n                      ).getUTCHours()}:00`;\n\n                    case \"_isCancelled\":\n                      return Object.byString(item, col.col)\n                        ? \"Cancelled\"\n                        : \"Active\";\n\n                    default:\n                      return Object.byString(item, col.col);\n                  }\n                }}\n              />\n            );\n          })}\n        </ExcelSheet>\n      )}\n    </ExcelFile>\n  );\n};\n\nexport default WithMessage(ExcelComponent);\n","import React, { useState, useEffect } from \"react\";\nimport WithLoadingSpinner from \"../../HOC/loading-spinner/WithLoadingSpinner\";\nimport WithMessage from \"../../HOC/modal-messages/WithMessage\";\nimport UserQueryForm from \"./UserQueryForm\";\nimport TableWithPagination from \"../../shared/table_data/TableWithPagination\";\nimport axios from \"axios\";\nimport { Container, Button } from \"react-bootstrap\";\nimport { format } from \"date-fns\";\nimport ExcelComponent from \"../../shared/excel-export/ExcelComponent\";\n\nconst UserReport = (props) => {\n  const { setLoadingSpinner, setModalMessage } = props;\n\n  const [excelButton, setExcelButton] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const NUM_OF_ROWS = 20;\n\n  const [data, setData] = useState();\n  const [query, setQuery] = useState();\n  const [prevQuery, setPrevQuery] = useState();\n  const [textResponse, setTextResponse] = useState(null);\n  const [paginationQuery, setPaginationQuery] = useState(\n    `&startpage=0&maxrows=${NUM_OF_ROWS}`\n  );\n\n  const handlePaginationQuery = (pagQ) => {\n    setPaginationQuery(pagQ);\n    setQuery(prevQuery + pagQ);\n  };\n\n  const handleQuery = (_query) => {\n    setQuery(_query + paginationQuery);\n    setPrevQuery(_query);\n  };\n\n  useEffect(() => {\n    if (query) {\n      setData([]);\n      setLoadingSpinner(true, \"Generating report data...\");\n\n      const handleFetchReport = async (_query) => {\n        try {\n          let response = await axios.get(`/reports/users?${_query}`);\n\n          // format date/time\n          response.data.values.forEach((b) => {\n            b.time = new Date(b.bookdate).toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              timeZone: \"UTC\",\n            });\n            b.bookdate = format(new Date(b.bookdate), \"dd-LLL-y, iii\");\n          });\n          if (response.data.total === 0) {\n            setTextResponse(\"Query returned no results.\");\n          } else {\n            setExcelButton(true);\n          }\n\n          setData(response.data);\n        } catch (err) {\n          console.log(err);\n          setTextResponse(\"Something went wrong. Please, try again later.\");\n          setModalMessage(\n            true,\n            \"Something went wrong\",\n            \"We couldn't generate the report at this moment. Please, try again later.\"\n          );\n        } finally {\n          setLoadingSpinner(false);\n        }\n      };\n      handleFetchReport(query);\n\n      setQuery(null);\n    }\n  }, [query, setModalMessage, setLoadingSpinner]);\n\n  const ExcelButton = () => {\n    if (excelButton) {\n      return (\n        <ExcelComponent\n          columns={[\n            { col: \"fullname\", label: \"User Name\" },\n            { col: \"email\", label: \"Email\" },\n            { col: \"cpf_no\", label: \"CPF\" },\n            { col: \"booking_id\", label: \"Booking Id\" },\n            { col: \"bookdate\", label: \"Date\" },\n            { col: \"time\", label: \"Time\" },\n            { col: \"room_name\", label: \"Room Name\" },\n            { col: \"price_at_booking\", label: \"Price at Booking\" },\n            { col: \"_isCancelled\", label: \"Booking Status\" },\n          ]}\n          values={data.allData}\n          name=\"Booking_General_Report\"\n          fileName={`booking_general_report`}\n        />\n      );\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        className=\"mt-4 mb-4\"\n        size=\"sm\"\n        variant=\"outline-secondary\"\n        disabled\n      >\n        Export to Excel\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <h3 className=\"text-secondary text-left p-3\">Booking report</h3>\n      <Container className=\"p-3 text-left\">\n        <UserQueryForm setQuery={handleQuery}>\n          <ExcelButton />\n        </UserQueryForm>\n        <hr />\n        {!data || data.total === 0 ? (\n          textResponse\n        ) : (\n          <TableWithPagination\n            headers={[\n              \"Name\",\n              \"Email\",\n              \"CPF\",\n              \"Booking Id\",\n              \"Date\",\n              \"Time slot\",\n              \"Room Name\",\n              \"Price\",\n              \"Booking Status\",\n            ]}\n            columns={[\n              \"fullname\",\n              \"email\",\n              \"cpf_no\",\n              \"booking_id\",\n              \"bookdate\",\n              \"time\",\n              \"room_name\",\n              \"price_at_booking\",\n              \"_isCancelled\",\n            ]}\n            pagination={{\n              max_rows: NUM_OF_ROWS,\n              paginationTotal: data.total,\n            }}\n            paginationQuery={handlePaginationQuery}\n            values={data.values}\n            whenClicked={() => null}\n          />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default WithLoadingSpinner(WithMessage(UserReport));\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Accordion, Button } from \"react-bootstrap\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as BsIcons from \"react-icons/bs\";\nimport * as HiIcons from \"react-icons/hi\";\nimport \"./Reports.css\";\n\nconst Reports = ({user}) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Container className=\"w-75 \">\n      { (user.isAdmin === true) ?\n      <>\n      <div>\n        <h2 className=\"text-secondary mb-4\">Select a report type</h2>\n        <br />\n      </div>\n      <Accordion flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header className=\"acc-header\">\n            <HiIcons.HiOutlineDocumentReport />\n            <span>Monthly Report : Total</span>\n          </Accordion.Header>\n          <Accordion.Body className=\"text-left\">\n            <span className=\"mr-4\">\n              Generate an overall report with totals for a selected month.\n            </span>\n            <Button\n              className=\"acc-btn\"\n              size=\"sm\"\n              onClick={() => history.push(\"/dashboard/report/month_total\")}\n            >\n              Click here\n            </Button>\n          </Accordion.Body>\n          <br />\n        </Accordion.Item>\n        <br />\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header className=\"acc-header\">\n            <AiIcons.AiOutlineUser />\n            <span>Monthly Report: by User</span>\n          </Accordion.Header>\n          <Accordion.Body className=\"text-left\">\n            <span className=\"mr-4\">\n              Generate a detailed report of bookings, by user, for a selected\n              month.\n            </span>\n            <Button\n              className=\"acc-btn\"\n              size=\"sm\"\n              onClick={() => history.push(\"/dashboard/report/month_user\")}\n            >\n              Click here\n            </Button>\n          </Accordion.Body>\n          <br />\n        </Accordion.Item>\n        <br />\n        <Accordion.Item eventKey=\"2\">\n          <Accordion.Header className=\"acc-header\">\n            <BsIcons.BsCalendar3 />\n            <span>All Bookings</span>\n          </Accordion.Header>\n          <Accordion.Body className=\"text-left\">\n            <span className=\"mr-4\">\n              Generate detailed booking reports for all users, for a selected\n              time.\n            </span>\n            <Button\n              className=\"acc-btn\"\n              size=\"sm\"\n              onClick={() => history.push(\"/dashboard/report/booking\")}\n            >\n              Click here\n            </Button>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n      </>\n      :\n      <Accordion flush>\n        <Accordion.Item eventKey=\"2\">\n          <Accordion.Header className=\"acc-header\">\n            <BsIcons.BsCalendar3 />\n            <span>My Bookings</span>\n          </Accordion.Header>\n          <Accordion.Body className=\"text-left\">\n            <span className=\"mr-4\">\n              Generate detailed booking reports for all users, for a selected\n              time.\n            </span>\n            <Button\n              className=\"acc-btn\"\n              size=\"sm\"\n              onClick={() => history.push(\"/dashboard/report/booking\")}\n            >\n              Click here\n            </Button>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n      }\n    </Container>\n  );\n};\n\nexport default Reports;\n","import roomBeige1 from \"../../../images/room-beige-1.jpeg\";\nimport roomBeige2 from \"../../../images/room-beige-2.jpeg\";\nimport roomBlue1 from \"../../../images/room-blue-1.jpeg\";\nimport roomBlue2 from \"../../../images/room-blue-2.jpeg\";\nimport roomBuilding from \"../../../images/room-building.jpeg\";\nimport roomEntrance1 from \"../../../images/room-entrance-1.jpeg\";\nimport roomEntrance2 from \"../../../images/room-entrance-2.jpeg\";\nimport roomGreen1 from \"../../../images/room-green-1.jpeg\";\nimport roomGreen2 from \"../../../images/room-green-2.jpeg\";\nimport roomView from \"../../../images/room-view.jpeg\";\nimport nathalia from \"../../../images/nathalia.jpg\";\nimport pri from \"../../../images/pri.jpg\";\n\nconst images = {\n    roomBeige1,\n    roomBeige2,\n    roomBlue1,\n    roomBlue2,\n    roomBuilding,\n    roomEntrance1,\n    roomEntrance2,\n    roomGreen1,\n    roomGreen2,\n    roomView,\n    nathalia,\n    pri\n}\nexport default images;","export default __webpack_public_path__ + \"static/media/room-beige-1.4485ae58.jpeg\";","export default __webpack_public_path__ + \"static/media/room-beige-2.47859c75.jpeg\";","export default __webpack_public_path__ + \"static/media/room-blue-1.5eba9afb.jpeg\";","export default __webpack_public_path__ + \"static/media/room-blue-2.4787fc28.jpeg\";","export default __webpack_public_path__ + \"static/media/room-building.97203083.jpeg\";","export default __webpack_public_path__ + \"static/media/room-entrance-1.7efc01fe.jpeg\";","export default __webpack_public_path__ + \"static/media/room-entrance-2.0a287e99.jpeg\";","export default __webpack_public_path__ + \"static/media/room-green-1.0359497b.jpeg\";","export default __webpack_public_path__ + \"static/media/room-green-2.c9eba68e.jpeg\";","export default __webpack_public_path__ + \"static/media/room-view.63078b77.jpeg\";","export default __webpack_public_path__ + \"static/media/nathalia.15eab7ef.jpg\";","export default __webpack_public_path__ + \"static/media/pri.5bc2d2a9.jpg\";","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\n\n// hook to check if user is or is not authenticated in the server\nconst useFetchRoom = (id) => {\n  const [isLoading, setLoading] = useState(true);\n  const [fetchedRoom, setRoom] = useState();\n  const [error, setError] = useState({ status: false, type: \"\" });\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchRoom = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`/rooms/${id}`);\n\n        // redirects to error page\n        if (response.data.error) {\n          setError({\n            status: true,\n            type: response.data.type.toString(),\n          });\n        }\n\n        // if room._id exist, set room.\n        if (response.data._id) {\n          setRoom(response.data);\n        }\n\n        // errors including response.status != 200 to 299\n      } catch (error) {\n        setError({\n          status: true,\n          type: error.response.status.toString(),\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRoom(); // call above function here\n  }, [history, id]);\n\n  return { fetchedRoom, isLoading, error};\n};\n\nexport default useFetchRoom;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Modal, Card, Button, Row } from \"react-bootstrap\";\nimport images from \"../shared/hook/imagesDataSource\";\nimport \"./Booking.css\";\nimport useFetchRoom from \"../shared/hook/useFetchRoom\";\nimport SpinnerLoading from \"../shared/spinner/SpinnerLoading\";\nimport Error from \"../error-pages/Error\";\nimport Carousel from 'react-bootstrap/Carousel'\n\nconst Booking = (props) => {\n  const history = useHistory();\n\n  const handleRoom = (rid) => {\n    history.push({ pathname: `/dashboard/${props.userid}/${rid}/book` });\n  };\n\n  const handleMaintenance = (rid)=>{\n    history.push({ pathname: `/dashboard/${props.userid}/${rid}/maintenance`});\n  };\n\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalId, setModalId] = React.useState(\"\");\n\n\n  function RoomModal(props) {\n    const { fetchedRoom, isLoading, error } = useFetchRoom(props.id);\n    if (isLoading) {\n      return <SpinnerLoading message=\"Loading room...\" />;\n    }\n    if (error.status === true) {\n      return <Error type={error.type} />;\n    }\n\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {fetchedRoom.name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Description</h4>\n          <p>\n            {fetchedRoom.description}\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <h2 className=\"text-secondary\">Select one of our available rooms</h2>\n      <Row className=\"justify-content-center\">\n        <Card style={{ width: \"18rem\" }} className=\"m-3\">\n          <Carousel interval={null}>\n            <Carousel.Item >\n              <Card.Img\n                variant=\"top\"\n                style={{ width: \"15rem\", height: \"15rem\", padding: \"5px 0 0 0\" }}\n                src={images.roomBeige1}\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <Card.Img\n                variant=\"top\"\n                style={{ width: \"15rem\", height: \"15rem\", padding: \"5px 0 0 0\" }}\n                src={images.roomBeige2}\n              /></Carousel.Item>\n          </Carousel>\n          <Card.Body>\n            <Card.Title>Room 1</Card.Title>\n            <Card.Text>\n            Sala espaçosa, com sofá de 3 lugares e poltrona. Ideal para atendimento individuais, de casais ou de família.<br/><br/><br/>\n            </Card.Text>\n            <Row>\n              <Button className=\"col-md-4 mr-3\" variant=\"secondary\" onClick={() => {\n                setModalId(\"616610f8838d67d1fab083e9\")\n                setModalShow(true);\n              }}>\n                Details\n              </Button>\n\n              <Button\n                className=\"booking-btn col-md-7\"\n                onClick={() => handleRoom(\"616610f8838d67d1fab083e9\")}\n              >\n                Book this room\n              </Button>\n            </Row>\n          </Card.Body>\n          <Card.Footer>\n            {props.isAdmin &&\n              <Button className=\"mr-3\" variant=\"secondary\" onClick={() => handleMaintenance(\"616610f8838d67d1fab083e9\")}>\n                Book Maintenance\n              </Button>\n            }\n          </Card.Footer>\n        </Card>\n\n        <Card style={{ width: \"18rem\" }} className=\"m-3\">\n          <Carousel interval={null}>\n            <Carousel.Item>\n              <Card.Img\n                variant=\"top\"\n                style={{ width: \"15rem\", height: \"15rem\", padding: \"5px 0 0 0\" }}\n                src={images.roomBlue1}\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <Card.Img\n                variant=\"top\"\n                style={{ width: \"15rem\", height: \"15rem\", padding: \"5px 0 0 0\" }}\n                src={images.roomBlue2}\n              />\n            </Carousel.Item>\n          </Carousel>\n          <Card.Body>\n            <Card.Title>Room 2</Card.Title>\n            <Card.Text>\n            Sala espaçosa, com janelas amplas e linda vista. Equipada com duas poltronas confortáveis e uma mesa, ideal para aplicação de testes e atendimentos online. \n            </Card.Text>\n            <Row>\n              <Button className=\"col-md-4 mr-3\" variant=\"secondary\" onClick={() => {\n                setModalId(\"6166134d4eca734cbfd3a412\")\n                setModalShow(true);\n              }}>\n                Details\n              </Button>\n              <Button\n                className=\"booking-btn col-md-7\"\n                onClick={() => handleRoom(\"6166134d4eca734cbfd3a412\")}\n              >\n                Book this room\n              </Button>\n            </Row>\n          </Card.Body>\n          <Card.Footer>\n            {props.isAdmin &&\n              <Button className=\"mr-3\" variant=\"secondary\" onClick={() => handleMaintenance(\"6166134d4eca734cbfd3a412\")}>\n                Book Maintenance\n              </Button>\n            }\n          </Card.Footer>\n        </Card>\n\n        <Card style={{ width: \"18rem\" }} className=\"m-3\">\n          <Carousel interval={null}>\n            <Carousel.Item>\n              <Card.Img\n                variant=\"top\"\n                style={{ width: \"15rem\", height: \"15rem\", padding: \"5px 0 0 0\" }}\n                src={images.roomGreen1}\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <Card.Img\n                variant=\"top\"\n                style={{ width: \"15rem\", height: \"15rem\", padding: \"5px 0 0 0\" }}\n                src={images.roomGreen2}\n              />\n            </Carousel.Item>\n          </Carousel>\n          <Card.Body>\n            <Card.Title>Room 3</Card.Title>\n            <Card.Text>\n            Sala com linda vista, duas poltronas amplas e confortáveis e divã moderno. <br/><br/><br/><br/>\n            </Card.Text>\n            <Row>\n              <Button className=\"col-md-4 mr-3\" variant=\"secondary\" onClick={() => {\n                setModalId(\"6166136e4eca734cbfd3a415\")\n                setModalShow(true);\n              }}>\n                Details\n              </Button>\n              <Button\n                className=\"booking-btn col-md-7\"\n                onClick={() => handleRoom(\"6166136e4eca734cbfd3a415\")}\n              >\n                Book this room\n              </Button>\n            </Row>\n          </Card.Body>\n          <Card.Footer>\n            {props.isAdmin &&\n              <Button className=\"mr-3\" variant=\"secondary\" onClick={() => handleMaintenance(\"6166136e4eca734cbfd3a415\")}>\n                Book Maintenance\n              </Button>\n            }\n          </Card.Footer>\n        </Card>\n        {modalShow &&\n          <RoomModal\n            show={modalShow}\n            id={modalId}\n            onHide={() => setModalShow(false)}\n          />\n        }\n      </Row>\n    </>\n  );\n};\n\nexport default Booking;\n","// CUSTOM TABLE DATA COMPONENT: renders a table of data\n// Props:\n// values =  array of objects to be displayed\n// headers =  array of headers\n// columns =  array of columns (headers and columns must be in the same order)\n// whenClicked = a callback to do something when clicking in a row\n// customColumn = renders a custom column element (eg.: the activate green/red button)\n\nimport React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { format, parseISO } from \"date-fns\";\nimport \"./NewTableData.css\";\n\nconst NewTableData = ({ values, whenClicked, customColumn, ...props }) => {\n  // helper function to access nested object propertios by string\n  Object.byString = function (o, s) {\n    s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n    s = s.replace(/^\\./, \"\"); // strip a leading dot\n    var a = s.split(\".\");\n    for (var i = 0, n = a.length; i < n; ++i) {\n      var k = a[i];\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    }\n    return o;\n  };\n\n  return (\n    <Table bordered responsive hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>#</th>\n          {props.headers.map((head, index) => (\n            <th key={index}>{head}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {values.map((data, index) => (\n          <tr style={{ cursor: \"pointer\" }} key={index}>\n            <td onClick={() => whenClicked(data)}>{index + 1}</td>\n\n            {props.columns.map((colName, index) => {\n              switch (colName) {\n                case \"fullname\":\n                case \"user.fullname\":\n                  if (data.user) {\n                    return (\n                      <td\n                        onClick={() => whenClicked(data)}\n                        key={index}\n                      >{`${data.user.first_name} ${data.user.last_name}`}</td>\n                    );\n                  } else {\n                    return (\n                      <td\n                        onClick={() => whenClicked(data)}\n                        key={index}\n                      >{`${data.first_name} ${data.last_name}`}</td>\n                    );\n                  }\n                  case \"fullname2\":\n                    return(\n                      <td\n                          onClick={() => whenClicked(data)}\n                          key={index}\n                        >{`${data.user_id.first_name} ${data.user_id.last_name}`}</td>\n                    );\n                case \"total\":\n                case \"price\":\n                case \"price_at_reservation\":\n                case \"price_at_booking\":\n                  return (\n                    <td onClick={() => whenClicked(data)} key={index}>\n                      {new Intl.NumberFormat(\"pt-BR\", {\n                        style: \"currency\",\n                        currency: \"BRL\",\n                      }).format(Object.byString(data, colName))}\n                    </td>\n                  );\n\n                case \"active\":\n                  let status;\n                  if (Object.byString(data, colName)) {\n                    status = \"Active\";\n                  } else {\n                    status = \"Inactive\";\n                  }\n                  return (\n                    <td onClick={() => whenClicked(data)} key={index}>\n                      {status}\n                    </td>\n                  );\n\n                case \"_isCancelled\":\n                  let cancelled;\n                  if (Object.byString(data, colName) === false) {\n                    cancelled = \"Active\";\n                  } else {\n                    cancelled = \"Cancelled\";\n                  }\n                  return (\n                    <td onClick={() => whenClicked(data)} key={index}>\n                      {cancelled}\n                    </td>\n                  );\n\n                case \"createdAt\":\n                case \"date\":\n                  return (\n                    <td onClick={() => whenClicked(data)} key={index}>\n                      {format(\n                        new Date(Object.byString(data, colName)),\n                        \"dd-LLL-y, iii\"\n                      )}\n                    </td>\n                  );\n\n                case \"lastBookingDate\":\n                case \"booking_date\":\n                  return (\n                    <td onClick={() => whenClicked(data)} key={index}>\n                      {`${format(\n                        new Date(Object.byString(data, colName)),\n                        \"dd-LLL-y, iii\"\n                      )} at ${parseISO(\n                        Object.byString(data, colName)\n                      ).getUTCHours()}:00`}\n                    </td>\n                  );\n\n                case \"booking_date2\":\n                  return (\n                    <td key={index} onClick={() => whenClicked(data)}>\n                      {`${format(\n                        parseISO(data.booking_date),\n                        \"iii '-' do 'of' MMMM', ' yyyy\"\n                      )} \n                            at ${parseISO(data.booking_date).getUTCHours()}:00`}\n                    </td>\n                  );\n\n                case \"room_id\":\n                  return (\n                    <td key={index} onClick={() => whenClicked(data)}>\n                      {data.room_id.name}\n                    </td>\n                  );\n\n                // Custom Column data: returns a custom component passed in the props\n                // repeat for any future customized column component\n                case \"activeAuthorize\":\n                  const { customColumnComp } = customColumn.find(\n                    (fnc) => fnc.colDesc === \"activeAuthorize\"\n                  );\n                  return <td key={index}>{customColumnComp(data)}</td>;\n\n                //Custom Column data: returns a custom html tag for the table element\n                //containing relevant information about cancellation status\n                case \"cancelStatus\":\n                  const { customColumnComp2 } = customColumn.find(\n                    (fnc) => fnc.colDesc === \"cancelStatus\"\n                  );\n                  return <td key={index}>{customColumnComp2(data)}</td>;\n\n                default:\n                  return (\n                    <td onClick={() => whenClicked(data)} key={index}>\n                      {Object.byString(data, colName)}\n                    </td>\n                  );\n              }\n            })}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default NewTableData;\n","import { useState, useRef, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport NewTableData from \"../../shared/table_data_new/NewTableData.js\";\nimport { Button,ButtonGroup, Card, Container, Modal, Row, ToggleButton, Tabs, Tab } from \"react-bootstrap\";\nimport { format, parseISO, subMinutes } from \"date-fns\";\nimport \"./BookingList.css\"\n\nconst radios =[\n    {name:'past bookings', value:'2'},\n    {name:'upcoming bookings', value:'1'}\n];\n\n/* Receives a user id as a prop, returns a table containing all the bookings for\n    that user. The user is able to request a cancellation if needed.*/\nconst BookingList = ({user}) => {\n    const [data, setData] = useState([]);\n    const [radioValue, setRValue] = useState('1');\n    const [ show, setShow ] = useState(false);\n    const [ tabKey, setTab ] = useState('mine');\n    // const [ context, setContext ] = useState();\n    const tabChanged = useRef(false);\n    // const [ currBkng, setBkng ] = useState({});\n    const bk = useRef(null);\n    const today = useRef(subMinutes(new Date(), (new Date()).getTimezoneOffset()));\n\n    const fetchBookings = useCallback(\n        async (key) => {\n            try {\n                console.log(key)\n                if (key==='mine') {\n                    if(radioValue === '1'){\n                        // console.log(`sent today.current: ${today.current}`)\n                        // console.log(`radio value ${radioValue}`)\n                        const res = await axios.get('/book',{\n                            params:{\n                                type: 'aftbkns',\n                                date: today.current,\n                                userid: user._id\n                            }\n                        }) \n                        const temp = await res.data\n                        console.log(temp)\n                        setData(temp)\n                    } \n                    else{\n                        // console.log(`radio value ${radioValue}`)\n                        // console.log(`sent today.current: ${today.current}`)\n                        const res = await axios.get('/book',{\n                            params:{\n                                type: 'bfrbkns',\n                                date: today.current,\n                                userid: user._id\n                            }\n                        }) \n                        const temp = await res.data\n                        console.log(temp)\n                        setData(temp)\n                    }\n                }else if(key === 'general'){\n                    if(radioValue === '1'){\n                        // console.log(`radio value ${radioValue}`)\n                        const res = await axios.get('/book',{\n                            params:{\n                                type: 'aftrequest',\n                                date: today.current,\n                                userid: user._id\n                            }\n                        }) \n                        const temp = await res.data\n                        console.log(temp)\n                        setData(temp)\n                    } \n                    else{\n                        // console.log(`radio value ${radioValue}`)\n                        const res = await axios.get('/book',{\n                            params:{\n                                type: 'bfrequest',\n                                date: today.current,\n                                userid: user._id\n                            }\n                        }) \n                        const temp = await res.data\n                        console.log(temp)\n                        setData(temp)\n                    }\n                }\n                \n            } catch (error) {\n                console.log(error)\n                alert(error)\n            }\n            // if(radioValue === '1'){\n            //     console.log(`radio value ${radioValue}`)\n            //     const res = await axios.get('/book',{\n            //         params:{\n            //             type: 'aftrequest',\n            //             date: today.current,\n            //             userid: user._id\n            //         }\n            //     }) \n            //     const temp = await res.data\n            //     setData(temp)\n            // } \n            // else{\n            //     console.log(`radio value ${radioValue}`)\n            //     const res = await axios.get('/book',{\n            //         params:{\n            //             type: 'bfrequest',\n            //             date: today.current,\n            //             userid: user._id\n            //         }\n            //     }) \n            //     const temp = await res.data\n            //     setData(temp)\n            // }\n        },\n        [radioValue, user._id],\n    );\n\n    const requestCancel = useCallback(async (bk)=>{\n        //set cancel request -> set cancel\n        // console.log(bk)\n        if(!bk._isCancelled && user.isAdmin){\n            const res = await axios.patch(`/book/cancel_approve/${bk._id}`,\n            {\n                _isCancelled: true \n            })\n            // console.log(res)\n        }else if(!bk.cancel_request){\n            const res = await axios.patch(`/book/cancel_request/${bk._id}`,\n            {\n                cancel_request: true \n            })\n            // console.log(res)\n        }\n        fetchBookings(tabKey);\n\n    }, [user.isAdmin, fetchBookings, tabKey])\n\n    const customRequestColumn = (bk)=>{\n        const request= {variant:\"secondary\", text:\"Request Cancel\", disabled:false};\n        if(bk._isCancelled){\n            // console.log(\"custom column if cancelled exec\")\n            request.variant = \"danger\"\n            request.text = \"Booking cancelled\"\n            request.disabled = true\n        }else if(bk.cancel_request && !user.isAdmin) {\n            // console.log(\"custom column if cancel req exec\")\n            request.variant = \"warning\"\n            request.text = \"Cancel request sent\"\n            request.disabled = true\n        }else if(bk.cancel_request && user.isAdmin){\n            request.variant = \"info\"\n            request.text = \"Cancel request received\"\n            request.disabled = false\n        }\n    \n        // console.log(bk)\n        // console.log(request)\n        // console.log(\"customRequestColumn exec\")\n        return (\n            \n                <Button\n                    variant={request.variant}\n                    disabled={request.disabled}\n                    size=\"sm\"\n                    onClick={()=>requestCancel(bk)}\n                >\n                    {request.text}\n                </Button>\n        )\n    }\n\n    useEffect(() => {\n        fetchBookings(tabKey);\n    }, [radioValue, fetchBookings, tabKey])\n\n    const handleModalOpen = (booking)=>{\n        bk.current = booking\n        setShow(true)\n    };\n    const handleModalClose = ()=>{\n        bk.current = null\n        setShow(false)\n    };\n\n    const handleKey = (e=>{\n        setTab(e)\n        tabChanged.current = true;\n    })\n\n    useEffect(() => {\n        if(tabChanged.current){\n            fetchBookings(tabKey)\n            tabChanged.current = false;\n        }\n    }, [tabKey, fetchBookings])\n\n    return( \n        <Container>\n            <Tabs className=\"bookings-filter-tab mb-4\" \n                color=\"#d66f3f\" \n                activeKey={tabKey} \n                onSelect={(e)=>handleKey(e)}>\n                    <Tab eventKey=\"mine\" title=\"My Bookings\"></Tab>\n                    {user.isAdmin ? <Tab eventKey=\"general\" title=\"All requests\"></Tab> : null}\n            </Tabs>\n\n            <Row>\n                <ButtonGroup>\n                    {radios.map((radio, idx)=>(\n                        <ToggleButton\n                            key={idx}\n                            id={`radio-${idx}`}\n                            type='checkbox'\n                            variant='outline-success'\n                            name='radio'\n                            value={radio.value}\n                            checked={radioValue === radio.value}\n                            onChange={(e)=> setRValue(e.currentTarget.value)}\n                            >\n                                {radio.name}\n                            </ToggleButton>\n                    ))}\n                </ButtonGroup>\n            </Row>\n            <Row>\n                {!data ? \n                <Card className=\"text-center\">\n                    <Card.Title>\n                        No Bookings found Yet!\n                    </Card.Title>\n                </Card>\n                :\n                (tabKey === 'mine' ?\n                <NewTableData\n                    headers={[\"Booking date\", \"Room\", \"Price\", \"Type\", \"Cancellation Request\"]}\n                    columns={[\"booking_date2\", \"room_id\", \"price_at_booking\", \"booking_type\", \"cancelStatus\"]}\n                    values={data}\n                    whenClicked={handleModalOpen}\n                    customColumn={[\n                        {\n                            colDesc: \"cancelStatus\",\n                            customColumnComp2: customRequestColumn,\n                        },\n                    ]}\n                />\n                :\n                <NewTableData\n                    headers={[\"User\", \"Booking date\", \"Room\", \"Price\", \"Type\", \"Cancellation Request\"]}\n                    columns={[\"fullname2\", \"booking_date2\", \"room_id\", \"price_at_booking\", \"booking_type\", \"cancelStatus\"]}\n                    values={data}\n                    whenClicked={handleModalOpen}\n                    customColumn={[\n                        {\n                            colDesc: \"cancelStatus\",\n                            customColumnComp2: customRequestColumn,\n                        },\n                    ]}\n                />\n                )\n                }\n            </Row>\n            {show &&\n            <Modal show={show} onHide={handleModalClose} centered>\n                <Modal.Title>\n                    Booking data\n                </Modal.Title>\n                <Modal.Body>\n                    {`${format(parseISO(bk.current.booking_date), \"iiii '-' do 'of' MMMM', ' yyyy\")} \n                    at ${parseISO(bk.current.booking_date).getUTCHours()}:00`}\n                    <br/>\n                    Booking status:\n                    <br/>\n                    {bk.current._isCancelled ? \n                        <div class=\"p-3 mb-2 bg-danger text-white\">Cancelled</div> \n                        : \n                        null}\n                    {!bk.current._isCancelled && bk.current.cancel_request ? \n                        <div class=\"p-3 mb-2 bg-warning text-white\">Request pending approval</div> \n                        : \n                        null}\n                    {!bk.current._isCancelled && !bk.current.cancel_request ? \n                        <div class=\"p-3 mb-2 bg-success text-white\">Booking ok</div> \n                        : \n                        null}\n                </Modal.Body>\n            </Modal>\n            }\n\n        </Container>\n    )\n    \n}\n\nexport default BookingList\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  addDays,\n  differenceInDays,\n  startOfMonth,\n  startOfDay,\n  setHours,\n  parseISO,\n  subMinutes\n} from \"date-fns\";\nimport DayPicker from \"react-day-picker\";\nimport \"../../../node_modules/react-day-picker/lib/style.css\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button, Modal } from \"react-bootstrap\";\nimport TimePicker from \"./TimePicker\";\n\nconst Maintenance = ({ userid, roomid }) => {\n  const [day, setDay] = useState(setHours(startOfDay(new Date()),2));\n  const [bookings, setBookings] = useState([]);\n  const [selected, setSelec] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [show, setshow] = useState(false);\n  const [data, setData] = useState({});\n  const currDay = useRef(startOfDay(new Date()));\n  const maxDay = useRef(addDays(startOfDay(new Date()), 7));\n  const roomName = useRef();\n\n  const timeSelected = (time) => {\n    /* correct date for timezone. Data should be persisted to db only in UTC time, due to date-fns ver2.x not accepting operations with dates from strings\n        it is parsed, using parseISO, it is adjusted to local browser/system time. When the time is selected since we are using raw numeric values for the\n        time, it needs to be readjusted/corrected to correctly represent the actual timeslot selected. All revolves around time in the coworking location.\n        \" SELECTED IS ALWAYS CORRECTED FOR UTC TIME, OR NULL \"*/\n    const dateWtime = setHours(day,time);\n    const correctedDate = subMinutes(dateWtime, day.getTimezoneOffset());\n    setSelec(prevSelec => {\n        const newSelec = prevSelec.filter(d => d.getUTCHours() !== correctedDate.getUTCHours());\n        return newSelec.length < prevSelec.length ? newSelec : [...prevSelec, correctedDate ];\n    })\n  };\n\n  const handleDayClick = (date, modifiers = {}) => {\n    if (modifiers.disabled) {\n      return;\n    }\n    setDay(setHours(date, 2));\n  };\n\n  /* function to fetch bookings for a certain date it uses usecallback so it doesnt get\n      reconstructed after every render, and to assure that if the function is passed to\n      children components it will have referential integrity*/\n  const fetchBookings = useCallback(\n    async (day) => {\n      try {\n        const res = await axios.get(\"/book\", {\n          params: {\n            type: 'general',\n            begin: day.toDateString(), \n            end: addDays(day, 1).toDateString(), \n            roomid: roomid\n          },\n        });\n        const fetchedbkns = await res.data;\n        \n        /* sanitize data (only valid timeslots are set to bookings)\n            if there are invalid bookings in db this removes it for \n            display purposes (implement DELETE method to clean DB)*/\n        const newB = fetchedbkns.filter((b)=>{\n          return ((parseISO(b.booking_date).getUTCHours()) >= 8 && \n                  (parseISO(b.booking_date).getUTCHours()) <= 19 &&\n                  (parseISO(b.booking_date).getUTCHours()) !== 12)\n        })\n        // console.log(\"hello\");\n        setBookings(newB);\n        //console.log(day);\n        //console.log(day.getDate())\n      } catch (err) {\n        alert(err.message);\n        console.log(err);\n      }\n    },\n    [roomid]\n  );\n\n  /* The price for the room the user is curently booking a room for should be \n      easily accessible to user */\n  useEffect(() => {\n    const fetchRoomPrice = async () => {\n      try {\n        const res = await axios.get(`/rooms/${roomid}`);\n        const fetchedroom = await res.data;\n        setPrice(fetchedroom.price);\n        roomName.current = fetchedroom.name;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchRoomPrice();\n  }, [roomid]);\n\n  /* on day change trigger fetch function to get bookings for the day\n      (useEffect garantees that )*/\n  useEffect(() => {\n    fetchBookings(day);\n    setSelec([]);\n  }, [day, fetchBookings]);\n\n  /* When user clicks the confirm button the data should be sent to database\n      if the data is persisted successfully or not the user should be notified, \n      one way or the other. Insightful information should be displayed to help\n      user inform helpdesk of the issue*/\n  const onConfirm = useCallback(async () => {\n    try {\n      const req = await axios.post(\"/book/maintenance\", {\n        booking_dates: selected,\n        user_id: userid,\n        room_id: roomid,\n        price_at_booking: price,\n        booking_type: \"maintenance\",\n      });\n    //   console.log(req)\n      fetchBookings(day);\n      setSelec([]);\n      setData(req.data);\n      setshow(true);\n    } catch (err) {\n      setData(err.data);\n      setshow(true);\n    }\n  }, [day, fetchBookings, price, roomid, selected, userid]);\n\n  const handleClose = ()=> setshow(false);\n\n  /* When user clicks cancel, the current selection should be nullified and \n      the timeslots cleared*/\n  const onCancel = useCallback(() => {\n    setSelec([]);\n    fetchBookings(day);\n  }, [day, fetchBookings]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n        <Row>\n          {differenceInDays(startOfMonth(maxDay.current), currDay.current) < 0 ? \n          (\n            <DayPicker\n              canChangeMonth={false}\n              selectedDays={day}\n              onDayClick={handleDayClick}\n              disabledDays={{\n                before: currDay.current,\n                after: maxDay.current,\n              }}\n            />\n          ) : (\n            <DayPicker\n              selectedDays={day}\n              onDayClick={handleDayClick}\n              disabledDays={{\n                before: currDay.current,\n                after: maxDay.current,\n              }}\n              fromMonth={currDay.current}\n              toMonth={maxDay.current}\n              fixedWeeks\n            />\n          )}\n        </Row>\n        <Row className=\"justify-content-md-center\">\n                        <span>Room Price: ${price}</span><br/>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n        {selected.length}\n        </Row>\n        {selected.length > 0 ? \n            selected.map((s, idx) =>{\n                return(\n                    <Row key={idx}className=\"justify-content-md-center\">\n                        <p className=\"font-weight-bold \">{idx !== 0 ? null : s.toDateString()}</p>\n                        <p className=\"font-weight-bold \">{!selected ? null : `at ${s.getUTCHours()}:00`}</p>\n                    </Row>\n                )\n            }\n            ):(\n                <Row className=\"justify-content-md-center\">No booking selected</Row>\n            )\n        }\n        </Col>\n        <Col className=\"mt-4 justify-content-md-center\">\n          <Row className=\"mb-4\"><span className=\"font-weight-bold\">Choose available timeslot below</span></Row>\n          <Row><TimePicker bookings={bookings} timeSelected={timeSelected} maintenance={true} day={day} /></Row>\n          \n        </Col>\n      </Row>\n\n      {selected.length === 0 ? (\n        <Row className=\"mt-4\">\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"primary\" size=\"lg\" disabled>\n              Confirm\n            </Button>\n          </Col>\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"secondary\" size=\"lg\" disabled>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      ) : (\n        <Row className=\"mt-4\">\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"primary\" size=\"lg\" onClick={onConfirm}>\n              Confirm\n            </Button>\n          </Col>\n          <Col className=\"d-grid gap-2\">\n            <Button variant=\"secondary\" size=\"lg\" onClick={onCancel}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      )}\n      <Modal \n        show={show} \n        onHide={handleClose}\n        backdrop=\"static\"\n      >\n        <Modal.Header>\n        <strong>{data.title}</strong><br/>\n        </Modal.Header>\n        <Modal.Body>\n        {data === undefined ?\n            <p>`Application Error, please contact admin. Error: server response undefined`</p>\n            :\n            (data.error ? \n              <div>\n                <strong>{data.message}, please inform the administrator.</strong>\n                <div className=\"p-3 mb-2 bg-danger text-white\">Booking Error</div> \n              </div>\n              :\n              <div>\n                <p>{roomName.current} was successfully reserved at {data.message}</p>\n                <div className=\"p-3 mb-2 bg-success text-white\">Booking ok</div>\n              </div>)\n          }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>Dismiss</Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Maintenance;\n","import { useState, useEffect, useRef } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  eachMonthOfInterval,\n  eachYearOfInterval,\n  format,\n  getMonth,\n  getYear,\n  startOfYear,\n  endOfYear,\n  set,\n} from \"date-fns\";\nimport \"./QueryForm.css\";\n\nconst QueryForm = ({ ...props }) => {\n  //\n  // -------------------- HELPERS --------------------- //\n\n  // helper to get a list of months within the year passed as argument\n  const getSelectMonths = (year) => {\n    let months = [];\n    let day;\n\n    if (year === \"-1\") {\n      return months;\n    }\n    if (year < getYear(new Date())) {\n      day = endOfYear(set(new Date(), { year: year }));\n    } else {\n      day = set(new Date(), { year: year });\n    }\n\n    let monthArray = eachMonthOfInterval({\n      start: startOfYear(day),\n      end: day,\n    });\n    monthArray.forEach((mon) => {\n      months.push({ name: format(mon, \"MMMM\"), value: getMonth(mon) });\n    });\n\n    return months;\n  };\n\n  // helper to get a list of years, up to current year\n  const getSelectYears = () => {\n    let years = [];\n    let yearArray = eachYearOfInterval({\n      start: new Date(2021, 1, 1),\n      end: new Date(),\n    });\n    yearArray.forEach((y) => {\n      years.push(format(y, \"y\"));\n    });\n\n    return years.sort((a, b) => b - a);\n  };\n\n  // -------------------- STATE --------------------- //\n  const [monthsList, setMonthsList] = useState([]);\n  const [yearChanged, setYearChanged] = useState(false);\n\n  const yearsList = getSelectYears(); // set list of years based on current year\n  const formRef = useRef(); // a reference to the formik form context\n\n  // when a year is selected, it handles the list of months\n  useEffect(() => {\n    if (yearChanged) {\n      setMonthsList(getSelectMonths(formRef.current.values.year));\n      setYearChanged((prev) => !prev);\n    }\n  }, [yearChanged]);\n\n  // -------------------- Form Validation --------------------- //\n  // Yup validation schema\n  const validationSchema = Yup.object().shape({\n    year: Yup.number().required(\"Required\").min(0, \"Please, select a year\"),\n    month: Yup.number().required(\"Required\").min(0, \"Please, select a month\"),\n  });\n\n  const handleSubmit = (values) => {\n    const { name, year, month, sort } = values;\n    let query = `name=${name}&year=${year}&month=${month}&sort=${sort}&show_cancel=false`;\n    props.setQuery(query);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          room: 0,\n          year: -1,\n          month: -1,\n          sort: \"byName\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        innerRef={formRef}\n      >\n        {({\n          values,\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          errors,\n          touched,\n          isValid,\n        }) => (\n          <>\n            <Form className=\"query-form\" onSubmit={handleSubmit}>\n              <Row className=\"row mb-4 text-left\">\n                <Form.Group as={Col} xs={3} controlId=\"queryYear\">\n                  <Form.Label>Year</Form.Label>\n                  <Form.Select\n                    aria-label=\"Select Year\"\n                    size=\"sm\"\n                    name=\"year\"\n                    onChange={(e) => {\n                      handleChange(e);\n                      setYearChanged(true);\n                    }}\n                    isInvalid={touched.year && !!errors.year}\n                  >\n                    <option value={-1}>Select...</option>\n                    {yearsList.map((y) => {\n                      return (\n                        <option key={y} value={y}>\n                          {y}\n                        </option>\n                      );\n                    })}\n                  </Form.Select>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.year}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} xs={3} controlId=\"queryMonth\">\n                  <Form.Label>Month</Form.Label>\n                  <Form.Select\n                    aria-label=\"Select Month\"\n                    size=\"sm\"\n                    name=\"month\"\n                    onChange={handleChange}\n                    isInvalid={touched.month && !!errors.month}\n                  >\n                    <option value={-1}>Select...</option>\n                    {monthsList.map((mon) => {\n                      return (\n                        <option key={mon.value} value={mon.value}>\n                          {mon.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Select>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.month}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n\n              <Row className=\"row text-left\">\n                <Form.Label as={Col} xs={{ span: 1, offset: 3 }}>\n                  Sort\n                </Form.Label>\n                <Form.Group\n                  as={Col}\n                  xs={{ span: 6, offset: 0 }}\n                  controlId=\"querySortBy\"\n                  key=\"radio\"\n                >\n                  <Form.Check\n                    inline\n                    label=\"Name\"\n                    name=\"sort\"\n                    type=\"radio\"\n                    id=\"byName\"\n                    value=\"byName\"\n                    onChange={handleChange}\n                    defaultChecked={true}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Total Amount\"\n                    name=\"sort\"\n                    type=\"radio\"\n                    id=\"byAmount\"\n                    value=\"byAmount\"\n                    onChange={handleChange}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row className=\"row\">\n                <Form.Group as={Col} xs={2} className=\"text-left\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mt-4 mb-4\"\n                    variant=\"secondary\"\n                    size=\"sm\"\n                  >\n                    Get report\n                  </Button>\n                </Form.Group>\n                <Form.Group as={Col} xs={2} className=\"text-left\">\n                  {props.children}\n                </Form.Group>\n              </Row>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default QueryForm;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Row, Col, Modal, Button } from \"react-bootstrap\";\nimport QueryForm from \"./QueryForm\";\nimport \"./MontlyTotalReport.css\";\nimport NewTableData from \"../../shared/table_data_new/NewTableData\";\nimport WithLoadingSpinner from \"../../HOC/loading-spinner/WithLoadingSpinner\";\nimport WithMessage from \"../../HOC/modal-messages/WithMessage\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport ExcelComponent from \"../../shared/excel-export/ExcelComponent\";\n\nconst MonthlyTotalReport = (props) => {\n  const [query, setQuery] = useState();\n  const [month, setSelectedMonth] = useState();\n  const [year, setSelectedYear] = useState();\n  const [data, setData] = useState();\n  const [total, setTotal] = useState();\n\n  const [excelButton, setExcelButton] = useState(false);\n\n  const { setLoadingSpinner, setModalMessage } = props;\n\n  const handleQuery = (_query) => {\n    setQuery(_query);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    if (query) {\n      setLoadingSpinner(true, \"Generating report data...\");\n      const fetchTotal = async () => {\n        try {\n          const response = await axios.get(`/reports/monthlytotal?${query}`);\n\n          if (response.data.length > 0) {\n            setData(response.data);\n            let sum = 0;\n            response.data.forEach((d) => {\n              sum += d.total;\n            });\n            setTotal(sum.toFixed(2));\n            setSelectedMonth(\n              (\n                format(new Date(response.data[0].lastBookingDate), \"M\") - 1\n              ).toString()\n            );\n            setSelectedYear(\n              format(new Date(response.data[0].lastBookingDate), \"y\")\n            );\n            setExcelButton(true);\n          } else {\n            setModalMessage(\n              true,\n              \"Report error\",\n              `There are no bookings in the selected month.`\n            );\n          }\n        } catch (err) {\n          console.log(err);\n\n          setModalMessage(\n            true,\n            \"Something went wrong\",\n            \"We couldn't generate the report at this moment. Please, try again later.\"\n          );\n        } finally {\n          setLoadingSpinner(false);\n        }\n      };\n      fetchTotal();\n      setQuery(null);\n    }\n  }, [query, setModalMessage, setLoadingSpinner]);\n\n  // redirect to user report page\n  const [showModal, setShowModal] = useState(false);\n  const [userData, setUserData] = useState();\n  const history = useHistory();\n\n  const MyModal = (props) => {\n    return (\n      <Modal\n        size=\"sm\"\n        show={showModal}\n        fullscreen={\"lg-down\"}\n        backdrop=\"static\"\n        keyboard={false}\n        centered\n      >\n        <Modal.Body>\n          Do you want to get the{\" \"}\n          <span style={{ color: \"#f39a71\", fontWeight: \"bold\" }}>\n            monthly report\n          </span>{\" \"}\n          for user{\" \"}\n          <strong>{`${props.data.user.user.first_name} ${props.data.user.user.last_name}`}</strong>\n          ?\n        </Modal.Body>\n        <Modal.Footer className=\"justify-content-center\">\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() =>\n              history.push(\"/dashboard/report/month_user\", props.data)\n            }\n          >\n            Get report\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  const ExcelButton = () => {\n    if (excelButton) {\n      return (\n        <ExcelComponent\n          columns={[\n            { col: \"user.fullname\", label: \"User Name\" },\n            { col: \"user.email\", label: \"Email\" },\n            { col: \"user.cpf_no\", label: \"CPF\" },\n            { col: \"lastBookingDate\", label: \"Last booking at\" },\n            { col: \"quantity\", label: \"Quantity\" },\n            { col: \"total\", label: \"Total\" },\n          ]}\n          values={data}\n          name=\"Monthly_total_report\"\n          fileName={`${format(\n            new Date(data[0].lastBookingDate),\n            \"MMMM\"\n          )}_total_report`}\n        />\n      );\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        className=\"mt-4 mb-4\"\n        size=\"sm\"\n        variant=\"outline-secondary\"\n        disabled\n      >\n        Export to Excel\n      </Button>\n    );\n  };\n\n  const redirectUser = (user) => {\n    setShowModal(true);\n    let query = `name=${user.user.first_name} ${user.user.last_name}&year=${year}&month=${month}&sort=byName&show_cancel=false&id=${user.user._id}`;\n    setUserData({ user: user, month: month, year: year, query: query });\n  };\n\n  return (\n    <>\n      <div className=\"query-container\">\n        <h3 className=\"text-secondary mb-4\">Monthly Total Report</h3>\n        <QueryForm setQuery={handleQuery}>\n          <ExcelButton />\n        </QueryForm>\n      </div>\n      {showModal ? <MyModal data={userData} /> : null}\n      {data ? (\n        <>\n          <NewTableData\n            headers={[\n              \"User Name\",\n              \"Email\",\n              \"CPF\",\n              \"Last booking at\",\n              \"Quantity\",\n              \"Total\",\n            ]}\n            columns={[\n              \"user.fullname\",\n              \"user.email\",\n              \"user.cpf_no\",\n              \"lastBookingDate\",\n              \"quantity\",\n              \"total\",\n            ]}\n            values={data}\n            whenClicked={redirectUser}\n          />\n          <Row className=\"total\">\n            <Col className=\"total-col\" xs={{ span: 3, offset: 7 }}>\n              Total for {format(new Date(data[0].lastBookingDate), \"MMMM\")}\n            </Col>\n            <Col className=\"total-col result\" xs={{ span: 2 }}>\n              R$ {total}\n            </Col>\n          </Row>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default WithLoadingSpinner(WithMessage(MonthlyTotalReport));\n","import { useState, useEffect, useRef } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  eachMonthOfInterval,\n  eachYearOfInterval,\n  format,\n  getMonth,\n  getYear,\n  startOfYear,\n  endOfYear,\n  set,\n} from \"date-fns\";\nimport axios from \"axios\";\nimport \"./QueryForm.css\";\n\nconst QueryForm = ({ ...props }) => {\n  //\n  // -------------------- HELPERS --------------------- //\n\n  // helper to get a list of months within the year passed as argument\n  const getSelectMonths = (year) => {\n    let months = [];\n    let day;\n\n    if (year === \"-1\") {\n      return months;\n    }\n    if (year < getYear(new Date())) {\n      day = endOfYear(set(new Date(), { year: year }));\n    } else {\n      day = set(new Date(), { year: year });\n    }\n\n    let monthArray = eachMonthOfInterval({\n      start: startOfYear(day),\n      end: day,\n    });\n    monthArray.forEach((mon) => {\n      months.push({ name: format(mon, \"MMMM\"), value: getMonth(mon) });\n    });\n\n    return months;\n  };\n\n  // helper to get a list of years, up to current year\n  const getSelectYears = () => {\n    let years = [];\n    let yearArray = eachYearOfInterval({\n      start: new Date(2021, 1, 1),\n      end: new Date(),\n    });\n    yearArray.forEach((y) => {\n      years.push(format(y, \"y\"));\n    });\n\n    return years.sort((a, b) => b - a);\n  };\n\n  // -------------------- STATE --------------------- //\n  const [monthsList, setMonthsList] = useState([]);\n  const [yearChanged, setYearChanged] = useState(false);\n\n  const yearsList = getSelectYears(); // set list of years based on current year\n  const formRef = useRef(); // a reference to the formik form context\n\n  // when a year is selected, it handles the list of months\n  useEffect(() => {\n    if (yearChanged) {\n      setMonthsList(getSelectMonths(formRef.current.values.year));\n      setYearChanged((prev) => !prev);\n    }\n  }, [yearChanged]);\n\n  // -------------------- NAME SUGGESTIONS --------------------- //\n  const [suggestions, setSuggestions] = useState([]);\n\n  // set the suggestion's list based on the input field (3 or more letters)\n  const handleSuggestions = async (e) => {\n    let value = e.target.value;\n\n    if (suggestions.length === 0 && value.length >= 3) {\n      try {\n        const response = await axios.get(`/users?name=${value}`);\n\n        if (response.data) {\n          const suggestions = [];\n          response.data.forEach((name) => {\n            suggestions.push(`${name.first_name} ${name.last_name}`);\n          });\n\n          if (suggestions.length > 0) {\n            setSuggestions(suggestions);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } else if (suggestions.length > 0 && value.length < 3) {\n      setSuggestions([]);\n    }\n  };\n\n  // Set the formik form = the selected name from the list\n  const handleNameClick = (sug) => {\n    formRef.current.setFieldValue(\"name\", sug);\n    setSuggestions([]);\n  };\n\n  // -------------------- Form Validation --------------------- //\n  // Yup validation schema\n  const validationSchema = Yup.object().shape({\n    year: Yup.number().required(\"Required\").min(0, \"Please, select a year\"),\n    month: Yup.number().required(\"Required\").min(0, \"Please, select a month\"),\n  });\n\n  const handleSubmit = (values) => {\n    const { name, year, month, sort, show_cancel } = values;\n    let query = `name=${name}&year=${year}&month=${month}&sort=${sort}&show_cancel=${show_cancel}&id=`;\n    props.setQuery(query);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          room: 0,\n          year: -1,\n          month: -1,\n          sort: \"asc\",\n          show_cancel: false,\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        innerRef={formRef}\n      >\n        {({ values, handleSubmit, handleChange, errors, touched }) => (\n          <>\n            <Form className=\"query-form\" onSubmit={handleSubmit}>\n              <Row className=\"row mb-4 text-left\">\n                <Form.Group as={Col} xs={4} controlId=\"queryName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    className=\"name-input\"\n                    name=\"name\"\n                    value={values.name}\n                    type=\"text\"\n                    size=\"sm\"\n                    autoComplete=\"off\"\n                    placeholder=\"Type user name\"\n                    onBlur={() => setTimeout(() => setSuggestions([]), 500)}\n                    onChange={(e) => {\n                      handleChange(e);\n                      handleSuggestions(e);\n                    }}\n                  />\n                  {suggestions.length > 0 ? (\n                    <div className=\"suggestions\">\n                      {suggestions.map((sug, idx) => {\n                        return (\n                          <li\n                            className=\"suggestions-item\"\n                            type=\"button\"\n                            onClick={() => handleNameClick(sug)}\n                            key={idx}\n                          >\n                            {sug}\n                          </li>\n                        );\n                      })}\n                    </div>\n                  ) : null}\n                </Form.Group>\n\n                <Form.Group as={Col} xs={2} controlId=\"queryYear\">\n                  <Form.Label>Year</Form.Label>\n                  <Form.Select\n                    aria-label=\"Select Year\"\n                    size=\"sm\"\n                    name=\"year\"\n                    onChange={(e) => {\n                      handleChange(e);\n                      setYearChanged(true);\n                    }}\n                    isInvalid={touched.year && !!errors.year}\n                  >\n                    <option value={-1}>Select...</option>\n                    {yearsList.map((y) => {\n                      return (\n                        <option key={y} value={y}>\n                          {y}\n                        </option>\n                      );\n                    })}\n                  </Form.Select>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.year}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} xs={2} controlId=\"queryMonth\">\n                  <Form.Label>Month</Form.Label>\n                  <Form.Select\n                    aria-label=\"Select Month\"\n                    size=\"sm\"\n                    name=\"month\"\n                    onChange={handleChange}\n                    isInvalid={touched.month && !!errors.month}\n                  >\n                    <option value={-1}>Select...</option>\n                    {monthsList.map((mon) => {\n                      return (\n                        <option key={mon.value} value={mon.value}>\n                          {mon.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Select>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.month}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n\n              <Row className=\"row text-left\">\n                <Form.Label as={Col} xs={{ span: 1, offset: 2 }}>\n                  Sort\n                </Form.Label>\n                <Form.Group\n                  as={Col}\n                  xs={{ span: 3, offset: 0 }}\n                  controlId=\"querySortBy\"\n                  key=\"radio\"\n                >\n                  <Form.Check\n                    inline\n                    label=\"Oldest date\"\n                    name=\"sort\"\n                    type=\"radio\"\n                    id=\"asc\"\n                    value=\"asc\"\n                    onChange={handleChange}\n                    defaultChecked={true}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Newest date\"\n                    name=\"sort\"\n                    type=\"radio\"\n                    id=\"desc\"\n                    value=\"desc\"\n                    onChange={handleChange}\n                  />\n                </Form.Group>\n                <Form.Group\n                  as={Col}\n                  // xs={{ span: 0, offset: 5 }}\n                  controlId=\"queryShowCancel\"\n                  key=\"checkbox\"\n                >\n                  <Form.Check\n                    inline\n                    label=\"Show cancelled bookings\"\n                    name=\"show_cancel\"\n                    id=\"show_cancel\"\n                    onChange={handleChange}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row className=\"row\">\n                <Form.Group as={Col} xs={2} className=\"text-left\">\n                  <Button\n                    type=\"submit\"\n                    className=\"mt-4 mb-4\"\n                    variant=\"secondary\"\n                    size=\"sm\"\n                  >\n                    Get report\n                  </Button>\n                </Form.Group>\n                <Form.Group as={Col} xs={2} className=\"text-left\">\n                  {props.children}\n                </Form.Group>\n              </Row>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default QueryForm;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Row, Col, Modal, Button } from \"react-bootstrap\";\nimport QueryForm from \"./QueryForm\";\nimport \"./MontlyUserReport.css\";\nimport NewTableData from \"../../shared/table_data_new/NewTableData\";\nimport WithLoadingSpinner from \"../../HOC/loading-spinner/WithLoadingSpinner\";\nimport WithMessage from \"../../HOC/modal-messages/WithMessage\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport ExcelComponent from \"../../shared/excel-export/ExcelComponent\";\n\nconst MonthlyUserReport = (props) => {\n  const [query, setQuery] = useState();\n  const [prevQuery, setPrevQuery] = useState();\n\n  const [data, setData] = useState();\n  const [users, setUsers] = useState([]);\n  const [showModalUsers, setShowModalUsers] = useState(false);\n\n  const [excelButton, setExcelButton] = useState(false);\n\n  const { setLoadingSpinner, setModalMessage } = props;\n\n  const handleQuery = (_query) => {\n    setQuery(_query);\n  };\n\n  const history = useHistory();\n  if (history.location.state) {\n    setLoadingSpinner(false);\n    handleQuery(history.location.state.query);\n    history.replace();\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    if (query) {\n      setPrevQuery(query);\n      setLoadingSpinner(true, \"Generating report data...\");\n      const fetchTotal = async () => {\n        try {\n          const response = await axios.get(`/reports/monthly_user?${query}`);\n\n          if (response.data.multiple === true) {\n            setUsers(response.data.values);\n            setShowModalUsers(true);\n          } else {\n            if (response.data[0].bookings.length > 0) {\n              setData(response.data[0]);\n\n              setExcelButton(true);\n            } else {\n              setModalMessage(\n                true,\n                \"Report error\",\n                `There are no bookings for user ${query\n                  .split(\"&\")[0]\n                  .substr(5)\n                  .toUpperCase()} in the selected month.`\n              );\n            }\n          }\n        } catch (err) {\n          console.log(err);\n          setModalMessage(\n            true,\n            \"Something went wrong\",\n            \"We couldn't generate the report at this moment. Please, try again later.\"\n          );\n        } finally {\n          setLoadingSpinner(false);\n        }\n      };\n      fetchTotal();\n      setQuery(null);\n    }\n  }, [query, setModalMessage, setLoadingSpinner]);\n\n  const handleModalUsers = (usr) => {\n    let temp = prevQuery.split(\"=\");\n    temp[1] = `${usr.first_name} ${usr.last_name}&year`;\n    temp = temp.join(\"=\");\n    temp += usr._id;\n    setQuery(temp);\n    setShowModalUsers(false);\n  };\n\n  const ModalUsers = () => {\n    return (\n      <Modal\n        className=\"user-modal\"\n        size=\"lg\"\n        show={showModalUsers}\n        fullscreen={\"lg-down\"}\n        backdrop=\"static\"\n        keyboard={true}\n        centered\n        onHide={() => setShowModalUsers(false)}\n      >\n        <Modal.Header closeButton>\n          <h3>Select a user from the list</h3>\n        </Modal.Header>\n        <Modal.Body className=\"user-modal-body\">\n          <NewTableData\n            headers={[\"User Name\", \"Email\", \"CPF\", \"Status\"]}\n            columns={[\"fullname\", \"email\", \"cpf_no\", \"active\"]}\n            values={users}\n            whenClicked={handleModalUsers}\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  };\n\n  const ExcelButton = () => {\n    if (excelButton) {\n      return (\n        <ExcelComponent\n          columns={[\n            { col: \"_id\", label: \"Booking Id\" },\n            { col: \"booking_date\", label: \"Booking Date\" },\n            { col: \"room_id.name\", label: \"Room Description\" },\n            { col: \"price_at_booking\", label: \"Price at Booking (R$)\" },\n            { col: \"_isCancelled\", label: \"Booking Status\" },\n          ]}\n          values={data.bookings}\n          name=\"Monthly_user_report\"\n          fileName={`${format(new Date(data.lastBookingDate), \"MMMM\")}_${\n            data.user.first_name\n          }_${data.user.last_name}_report`}\n        />\n      );\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        className=\"mt-4 mb-4\"\n        size=\"sm\"\n        variant=\"outline-secondary\"\n        disabled\n      >\n        Export to Excel\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"query-container\">\n        <h3 className=\"text-secondary mb-4\">Monthly Report by User</h3>\n        <QueryForm setQuery={handleQuery}>\n          <ExcelButton />\n        </QueryForm>\n      </div>\n      {users ? <ModalUsers /> : null}\n      {data ? (\n        <>\n          <NewTableData\n            className=\"new-table-data\"\n            headers={[\n              \"Booking ID\",\n              \"Booking Date\",\n              \"Room Description\",\n              \"Price at booking\",\n              \"Booking status\",\n            ]}\n            columns={[\n              \"_id\",\n              \"booking_date\",\n              \"room_id.name\",\n              \"price_at_booking\",\n              \"_isCancelled\",\n            ]}\n            values={data.bookings}\n            whenClicked={() => null}\n          />\n          <Row className=\"total\">\n            <Col className=\"total-col\" xs={{ span: 3, offset: 7 }}>\n              Total for {format(new Date(data.lastBookingDate), \"MMMM\")}\n            </Col>\n            <Col className=\"total-col result\" xs={{ span: 2 }}>\n              R$ {data.total}\n            </Col>\n          </Row>\n          <span></span>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default WithLoadingSpinner(WithMessage(MonthlyUserReport));\n","import { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport Scheduler from \"../scheduler/Scheduler\";\nimport UserAuthorization from \"../user_authorization/UserAuthorization\";\nimport Error from \"../error-pages/Error\";\nimport useAuthentication from \"../shared/hook/useAuthentication\";\nimport Sidebar from \"../dashboard/sidebar/Sidebar\";\nimport UserProfile from \"../dashboard/user_profile/UserProfile\";\nimport ChangePasswordForm from \"../dashboard/change_pw/ChangePasswordForm\";\nimport UserReport from \"../reports/user-report/UserReport\";\nimport Reports from \"../reports/Reports\";\nimport Booking from \"../scheduler/Booking\";\nimport BookingList from \"../dashboard/bookings/BookingList\";\nimport Maintenance from \"../scheduler/Maintenance\";\nimport MonthlyTotalReport from \"../reports/monthly-total/MonthlyTotalReport\";\nimport MonthlyUserReport from \"../reports/monthly-user/MonthlyUserReport\";\n\nconst ProtectedRoutes = ({ match }) => {\n  // custom authentication hook:\n  // isAuth: check in the server if user is authenticated\n  // isLoading: waiting for server response\n  // data: return user object\n  const { isAuth, isLoading, data } = useAuthentication();\n  const [resizeContent, setResizeContent] = useState(true);\n\n  const handleResize = (arg) => {\n    setResizeContent(arg);\n  };\n\n  // waiting for server response...\n  if (isLoading) {\n    return null;\n  }\n\n  // If user is not authenticated, return login page\n  // Otherwise, load protected routes\n  if (!isAuth) {\n    return <Error type=\"401\" />;\n  }\n\n  if (isAuth) {\n    return (\n      <>\n        <div className=\"sidebar\">\n          <Sidebar id={data._id} isAdmin={data.isAdmin} resize={handleResize} />\n        </div>\n        <div className={resizeContent ? \"content-resize\" : \"content\"}>\n          <Switch>\n            <Route exact path={`${match.url}`}>\n              <Dashboard userData={data} />\n            </Route>\n\n            <Route\n              exact\n              path={`${match.url}/user/:id`}\n              render={(props) => (\n                <UserProfile id={props.match.params.id} user={data} />\n              )}\n            />\n\n            <Route\n              exact\n              path={`${match.url}/user/:id/changePassword`}\n              render={(props) => (\n                <ChangePasswordForm id={props.match.params.id} user={data} />\n              )}\n            />\n\n            <Route\n              exact\n              path={`${match.url}/book`}\n              render={(props) => (\n                <Booking\n                  userid={data._id}\n                  isAdmin={data.isAdmin}\n                  roomid={props.match.params.roomid}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path={`${match.url}/:userid/:roomid/book`}\n              render={(props) => (\n                <Scheduler\n                  userid={data._id}\n                  roomid={props.match.params.roomid}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path={`${match.url}/:userid/:roomid/maintenance`}\n              render={(props) => (\n                <Maintenance\n                  userid={data._id}\n                  roomid={props.match.params.roomid}\n                />\n              )}\n            />\n\n            <Route exact path={`${match.url}/:id/authorization`}>\n              <UserAuthorization />\n            </Route>\n\n            <Route exact path={`${match.url}/report/`}>\n              <Reports \n                user={data}\n              />\n            </Route>\n\n            <Route exact path={`${match.url}/report/booking`}>\n              <UserReport \n                user={data}\n              />\n            </Route>\n\n            <Route exact path={`${match.url}/report/month_total`}>\n              <MonthlyTotalReport />\n            </Route>\n            <Route exact path={`${match.url}/report/month_user`}>\n              <MonthlyUserReport />\n            </Route>\n\n            <Route\n              exact\n              path={`${match.url}/bookinglist`}\n              render={(props) => (\n                <BookingList\n                  // userid={data._id}\n                  user={data}\n                />\n              )}\n            ></Route>\n\n            <Route exact path={`${match.url}/*`}>\n              <div>PROTECTED ERROR 404</div>\n              <Error type=\"404\" />\n            </Route>\n          </Switch>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default ProtectedRoutes;\n","import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport \"./MainNavbar.css\";\nimport LoginModal from \"../../../login/LoginModal\";\nimport useAuthentication from \"../../hook/useAuthentication\";\nimport axios from \"axios\";\nimport WithLoadingSpinner from \"../../../HOC/loading-spinner/WithLoadingSpinner\";\n\nconst MainNavbar = (props) => {\n  // tracks the state of the modal (open/closed)\n  const [showModal, setShowModal] = useState(false);\n\n  const handleLoginModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const history = useHistory();\n\n  // custom hook to check if user is/not authenticated (render different navbar links)\n  const { isAuth, isLoading } = useAuthentication();\n\n  const handleLogout = async () => {\n    props.setLoadingSpinner(true, \"Logging out...\");\n    try {\n      const logout = await axios.get(\"/authentication/logout\");\n      if (logout.status === 200) {\n        history.push(\"/\");\n        history.go(\"/\");\n        console.log(\"LOGOUT\");\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      props.setLoadingSpinner(false);\n    }\n  };\n\n  const ProtectedNavbar = () => {\n    return (\n      <>\n        <Navbar\n          className=\"nav-template\"\n          variant=\"dark\"\n          sticky=\"top\"\n          expand=\"lg\"\n        >\n          <Navbar.Brand className=\"logo\" as={Link} to=\"/\">\n            Psicoworking{\" \"}\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav>\n              {/* <Nav.Link\n                key={\"Home\"}\n                as={NavLink}\n                to=\"/\"\n                className=\"nav-template pb-0 customColor\"\n              >\n                {!isLoading ? `Home` : null}\n              </Nav.Link> */}\n              <Nav.Link\n                key={\"Dashboard\"}\n                as={NavLink}\n                to=\"/dashboard\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                {!isLoading ? `Dashboard` : null}\n              </Nav.Link>\n\n              {/* <Nav.Link\n                key={\"Contact\"}\n                as={NavLink}\n                to=\"/contact\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                Contact\n              </Nav.Link> */}\n              <Nav.Link\n                key={\"About us\"}\n                as={NavLink}\n                to=\"/about\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                About us\n              </Nav.Link>\n              {/* <Nav.Link\n                key={\"Pricing\"}\n                as={NavLink}\n                to=\"/pricing\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                Pricing\n              </Nav.Link> */}\n\n              <Nav.Link\n                key={\"Logout\"}\n                className=\"nav-template-link pb-0 customColor\"\n                onClick={handleLogout}\n              >\n                Sign Out\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <LoginModal\n          showmodal={showModal}\n          handlemodal={handleLogout}\n          redirectTo=\"/dashboard\"\n        />\n      </>\n    );\n  };\n\n  const PublicNavbar = () => {\n    return (\n      <>\n        <Navbar\n          className=\"nav-template\"\n          variant=\"dark\"\n          sticky=\"top\"\n          expand=\"lg\"\n        >\n          <Navbar.Brand className=\"logo\" as={Link} to=\"/\">\n            Psicoworking\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav>\n              {/* <Nav.Link\n                key={\"Contact\"}\n                as={NavLink}\n                to=\"/contact\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                Contact\n              </Nav.Link> */}\n              <Nav.Link\n                key={\"About us\"}\n                as={NavLink}\n                to=\"/about\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                About us\n              </Nav.Link>\n              {/* <Nav.Link\n                key={\"Pricing\"}\n                as={NavLink}\n                to=\"/pricing\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                Pricing\n              </Nav.Link> */}\n              <Nav.Link\n                key={\"Sign Up\"}\n                as={NavLink}\n                to=\"/signup\"\n                className=\"nav-template-link md-auto customColor\"\n              >\n                Sign up\n              </Nav.Link>\n              <Nav.Link\n                key={\"Login\"}\n                className=\"nav-template-link md-auto customColor\"\n                onClick={handleLoginModal}\n              >\n                Log in\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <LoginModal\n          showmodal={showModal}\n          handlemodal={handleLoginModal}\n          redirectTo=\"/dashboard\"\n        />\n      </>\n    );\n  };\n\n  const EmptyNavbar = () => {\n    return (\n      <>\n        <Navbar\n          className=\"nav-template\"\n          variant=\"dark\"\n          sticky=\"top\"\n          expand=\"lg\"\n        >\n          <Navbar.Brand className=\"logo\" as={Link} to=\"/\">\n            Psicoworking\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav></Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </>\n    );\n  };\n\n  if (isLoading) {\n    return <EmptyNavbar />;\n  } else {\n    return <>{isAuth ? <ProtectedNavbar /> : <PublicNavbar />}</>;\n  }\n};\n\nexport default WithLoadingSpinner(MainNavbar);\n","import \"./Footer.css\";\nimport \"../main_page/MainPage.css\"\nfunction Footer() {\n    return (\n        <>\n        <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\" integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\" crossorigin=\"anonymous\"></script>\n            <footer>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4 footer-column\">\n        <ul class=\"nav flex-column\">\n          <li class=\"nav-item\">\n            <span class=\"footer-title\">Psicoworking</span>\n          </li>\n          <li class=\"nav-item\">\n            <p>We have the perfect room for your consultations</p>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-4 footer-column\">\n        <ul class=\"nav flex-column\">\n          <li class=\"nav-item\">\n            <span class=\"footer-title\">Quick Links</span>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"links\" href=\"/about\">About us</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"links\" href=\"/pricing\">Pricing</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"links\" href=\"/signup\">Sign Up</a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-4 footer-column\">\n        <ul class=\"nav flex-column\">\n          <li class=\"nav-item\">\n            <span class=\"footer-title\">Contact & Support</span>\n          </li>\n          <li class=\"nav-item\">\n            <span class=\"nav-link\"><i class=\"fas fa-phone\"></i>    +47 45 80 80 80</span>\n          </li>\n          <li class=\"nav-item\">\n            <span class=\"nav-link\">Address</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"text-center\"><i class=\"fas fa-ellipsis-h\"></i></div>\n    \n    <div class=\"row text-center\">\n        <span class=\"copyright quick-links\">Copyright &copy; Psicoworking</span>\n    </div>\n  </div>\n</footer>\n        </>\n    )\n};\n\nexport default Footer;","import \"./MainPage.css\";\nimport { useHistory } from \"react-router-dom\";\nimport images from \"../shared/hook/imagesDataSource\";\nimport { useState, useEffect } from \"react\";\nimport LoginModal from \"../login/LoginModal.js\";\nimport Footer from \"../footer/Footer\";\nimport useAuthentication from \"../shared/hook/useAuthentication\";\n\nfunction MainPage() {\n  // custom hook to check if user is/not authenticated (render different navbar links)\n  const { isAuth } = useAuthentication();\n\n  const history = useHistory();\n\n  // const redirect = ()=>{\n  //   let path = \"/dashboard/book\"\n  //   if(!isAuth){\n  //     console.log(\"here\");\n  //     //handleLoginModal()\n  //   }\n  //   history.push(path)\n  // }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // tracks the state of the modal (open/closed)\n  const [showModal, setShowModal] = useState(false);\n\n  const handleLoginModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const redirect = () => {\n    if (!isAuth) {\n      handleLoginModal();\n    } else {\n      //path = \"/dashboard\"\n      history.push(\"/dashboard\");\n    }\n  };\n  return (\n    <div className=\"MainPage\">\n      <section className=\"colored-section\" id=\"title\">\n        <div className=\"container-fluid\">\n          {/* <!-- Nav Bar --> */}\n\n          {/* <nav className=\"navbar navbar-expand-lg navbar-dark\">\n            <a className=\"navbar-brand\" href=\"/#\">\n              Psicoworking\n            </a>\n\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarTogglerDemo02\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/#\">\n                    Contact\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/#\">\n                    Pricing\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/#\">\n                    Sign Up / Login\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </nav> */}\n\n          {/* <!-- Title --> */}\n\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"big-heading\">\n                Find the perfect room for your consultations.\n              </h1>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-light btn-lg download-button\"\n                onClick={redirect}\n              >\n                Book Now\n              </button>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <img\n                className=\"title-image\"\n                src={images.roomBeige1}\n                alt={\"waiting room img\"}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* <!-- Features --> */}\n\n      <section className=\"white-section\" id=\"features\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"feature-box col-lg-4\">\n              <i className=\"icon fas fa-check-circle fa-4x\"></i>\n              <h3 className=\"feature-title\">Easy to use.</h3>\n              <p>Book a room for your consult with a couple of clicks.</p>\n            </div>\n\n            <div className=\"feature-box col-lg-4\">\n              <i className=\"icon fas fa-bullseye fa-4x\"></i>\n              <h3 className=\"feature-title\">Variety of Rooms.</h3>\n              <p>We have rooms that fit all your needs.</p>\n            </div>\n\n            <div className=\"feature-box col-lg-4\">\n              <i className=\"icon fas fa-heart fa-4x\"></i>\n              <h3 className=\"feature-title\">Amenities.</h3>\n              <p>\n                All our rooms are equiped with chairs, wifi, air conditioning\n                and more.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* <!-- Testimonials --> */}\n\n      <section className=\"colored-section\" id=\"testimonials\">\n        <div\n          id=\"testimonial-carousel\"\n          className=\"carousel slide\"\n          data-ride=\"false\"\n        >\n          <div className=\"carousel-inner\">\n            <div className=\"carousel-item active container-fluid\">\n              <h2 className=\"testimonial-text\">Room 1</h2>\n              <img\n                className=\"testimonial-image\"\n                src={images.roomBeige1}\n                alt=\"room1\"\n              />\n            </div>\n            <div className=\"carousel-item container-fluid\">\n              <h2 className=\"testimonial-text\">Room 2</h2>\n              <img\n                className=\"testimonial-image\"\n                src={images.roomBlue1}\n                alt=\"Room 2\"\n              />\n            </div>\n            <div className=\"carousel-item container-fluid\">\n              <h2 className=\"testimonial-text\">Room 3</h2>\n              <img\n                className=\"testimonial-image\"\n                src={images.roomGreen1}\n                alt=\"Room 3\"\n              />\n            </div>\n          </div>\n          <a\n            className=\"carousel-control-prev\"\n            href=\"#testimonial-carousel\"\n            role=\"button\"\n            data-slide=\"prev\"\n          >\n            <span className=\"carousel-control-prev-icon\"></span>\n          </a>\n          <a\n            className=\"carousel-control-next\"\n            href=\"#testimonial-carousel\"\n            role=\"button\"\n            data-slide=\"next\"\n          >\n            <span className=\"carousel-control-next-icon\"></span>\n          </a>\n        </div>\n      </section>\n      {/* <!-- Pricing --> */}\n\n      <section className=\"white-section\" id=\"pricing\">\n        <h2 className=\"section-heading\">\n          A Room for Every Psychologist's Needs\n        </h2>\n        <p>Simple and affordable price plans for your and your patients.</p>\n\n        <div className=\"row\">\n          <div className=\"pricing-column col-lg-4 col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Room 1</h3>\n              </div>\n              <div className=\"card-body\">\n                <h2 className=\"price-text\">$20 / hour</h2>\n                <p>Wifi</p>\n                <p>Air Conditioning</p>\n                <p>Comfortable chairs</p>\n                <button\n                  className=\"btn btn-lg btn-block btn-dark\"\n                  type=\"button\"\n                  onClick={redirect}\n                >\n                  Book this Room\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"pricing-column col-lg-4 col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Room 2</h3>\n              </div>\n              <div className=\"card-body\">\n                <h2 className=\"price-text\">$23 / hour</h2>\n                <p>Wifi</p>\n                <p>Air Conditioning</p>\n                <p>Couch and Desk</p>\n                <button\n                  className=\"btn btn-lg btn-block btn-dark\"\n                  type=\"button\"\n                  onClick={redirect}\n                >\n                  Book this Room\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"pricing-column col-lg-4\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Plan 3</h3>\n              </div>\n              <div className=\"card-body\">\n                <h2 className=\"price-text\">$25 / hour</h2>\n                <p>Wifi</p>\n                <p>Air Conditioning</p>\n                <p>Comfortable chairs</p>\n                <button\n                  className=\"btn btn-lg btn-block btn-dark\"\n                  type=\"button\"\n                  onClick={redirect}\n                >\n                  Book this Room\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* <!-- Call to Action --> */}\n\n      <section className=\"colored-section\" id=\"cta\">\n        <div className=\"container-fluid\">\n          <h3 className=\"big-heading\">\n            Find the Perfect Office Room for your Needs Today.\n          </h3>\n          <button\n            className=\"btn btn-outline-light btn-lg download-button\"\n            type=\"button\"\n          >\n            Book Now\n          </button>\n        </div>\n      </section>\n      <LoginModal\n        showmodal={showModal}\n        handlemodal={handleLoginModal}\n        redirectTo={\"/dashboard/book\"}\n      />\n      {/* <!-- Footer --> */}\n          <Footer/>\n      \n    </div>\n  );\n}\n\nexport default MainPage;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FormField } from \"../../shared/form-components/FormField\";\nimport { state_uf_data } from \"./state_uf_data\";\nimport \"./Signupform.css\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport WithLoadingSpinner from \"../../HOC/loading-spinner/WithLoadingSpinner\";\n\nconst SignUpForm = (props) => {\n  // --- This will handle the autocomplete delimiters in form ---/\n  const [crpDelimiter, setCrpDelimiter] = useState(false);\n  const [phoneDelimiter, setPhoneDelimiter] = useState(false);\n\n  const crpDelimiterHandle = () => {\n    const { crp_no } = formRef.current.values;\n    if (crp_no.length > 1) {\n      if (!crpDelimiter) {\n        formRef.current.setFieldValue(\"crp_no\", crp_no + \"/\");\n        setCrpDelimiter(true);\n      }\n    } else {\n      setCrpDelimiter(false);\n    }\n  };\n\n  const phoneDelimiterHandle = () => {\n    const { phone } = formRef.current.values;\n    if (phone.length === 2 && !phoneDelimiter) {\n      formRef.current.setFieldValue(\"phone\", phone + \"-\");\n      setPhoneDelimiter(true);\n    } else if (phone.length === 8 && !phoneDelimiter) {\n      formRef.current.setFieldValue(\"phone\", phone + \"-\");\n      setPhoneDelimiter(true);\n    } else {\n      setPhoneDelimiter(false);\n    }\n  };\n\n  //--- *Yup* validation schema ---/\n  const validationSchema = Yup.object().shape({\n    first_name: Yup.string()\n      .max(20, \"First Name must be 20 characters or less\")\n      .required(\"Required\"),\n    last_name: Yup.string()\n      .max(20, \"Last Name must be 20 characters or less\")\n      .required(\"Required\"),\n    crp_no: Yup.string()\n      .min(8, \"Invalid CRP format\")\n      .required(\"CRP number is required\")\n      .matches(/^[0-9]{2}\\/[0-9]{5}$/, \"Invalid CRP format\"),\n    phone: Yup.string()\n      .min(12, \"Phone number is invalid\")\n      .required(\"Phone number is required\")\n      .matches(/^[0-9]{2}-[0-9]{5}-[0-9]{4}$/, \"Invalid phone format\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(8, \"Password must be at least 8 charaters\")\n      .required(\"Required\")\n      .matches(\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\n        \"Password must contain at least 8 characters, 1 uppercase, 1 lowercase, and 1 number.\"\n      ),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Password must match\")\n      .required(\"You must confirm your password\"),\n    dob: Yup.date().required(\"Required\"),\n    city: Yup.string().required(\"Required\"),\n    state: Yup.string().required(\"Required\"),\n    zip: Yup.string().required(\"Required\"),\n    address1: Yup.string().required(\"Required\"),\n    address2: Yup.string().required(\"Required\"),\n  });\n\n  //---- This will handle address auto-complete when Zip is entered ----/\n  // It fetches address data from an external API\n  // then it saves fetched data into respective formik field values\n  const handleFetchZip = async () => {\n    const cep = formRef.current.values.zip;\n    if (cep.length >= 8) {\n      try {\n        axios.get(`https://viacep.com.br/ws/${cep}/json/ `).then((res) => {\n          if (!res.data.erro) {\n            let state_uf = state_uf_data.find(\n              (uf) => uf.substring(0, 2).search(res.data.uf) >= 0\n            );\n\n            formRef.current.setFieldValue(\"city\", res.data.localidade);\n            formRef.current.setFieldValue(\"state\", state_uf);\n            formRef.current.setFieldValue(\"address1\", res.data.logradouro);\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  // --- Redirects --- //\n  // enables history object: allows redirection after POST\n  let history = useHistory();\n\n  // --- Handle error response from backend POST --- //\n  // uses useRef to scrool up to the field with problems (email, crp, etc...)\n  const [apiError, setApiError] = useState(false);\n  const errorRef = useRef(null);\n  const formRef = useRef();\n\n  // scrolls up to the email field\n  const executeScroll = () => {\n    errorRef.current && errorRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // tracks changes to apiError, if true call function to scroll up\n  useEffect(() => {\n    if (apiError) {\n      executeScroll();\n      setApiError(false);\n    }\n  }, [apiError]);\n\n  // ---- Handle form submit ---- //\n  const { setLoadingSpinner } = props;\n\n  const handleSubmitForm = async (values, { setFieldError }) => {\n    // Fetch data from API\n    try {\n      setLoadingSpinner(true, \"Submitting user information...\");\n      const response = await axios({\n        method: \"post\",\n        url: \"/users\",\n        data: values,\n      });\n\n      // include display property and set to false\n      response.data = { ...response.data, display: false };\n\n      // destructuring the response data from API\n      const { success, message, redirectURL, type } = response.data;\n      console.log(response.data);\n\n      setLoadingSpinner(false);\n\n      // if response is not success\n      // in case of an \"email\" error, it setApiError to true, which will call the scroll up function\n      // if any other error, it redirects to \"redirectURL\", using history.push()\n      if (!success) {\n        if (type === \"email\") {\n          setApiError(true);\n          setFieldError(type, message);\n        } else {\n          history.push({\n            pathname: redirectURL,\n            state: { ...response.data, display: true },\n          });\n        }\n\n        // if success is true, redirects and display a success message\n      } else {\n        history.push({\n          pathname: redirectURL,\n          state: { ...response.data, display: true },\n        });\n      }\n\n      // if API call fails, shows an error message and redirects to /signup\n    } catch (e) {\n      setLoadingSpinner(false);\n      history.push({\n        pathname: \"/signup\",\n        state: {\n          message: \"Something went wrong\",\n          display: true,\n        },\n      });\n    }\n  };\n\n  return (\n    <Formik\n      innerRef={formRef}\n      initialValues={{\n        first_name: \"\",\n        last_name: \"\",\n        crp_no: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        dob: \"\",\n        zip: \"\",\n        city: \"\",\n        state: state_uf_data[0], // 'Choose...'\n        address1: \"\",\n        address2: \"\",\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmitForm}\n    >\n      {(formik) => (\n        <div className=\"signup-container\">\n          <Form>\n            <FormField\n              formType=\"input\"\n              label=\"First Name\"\n              name=\"first_name\"\n              type=\"text\"\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Last Name\"\n              name=\"last_name\"\n              type=\"text\"\n            />\n            <FormField\n              formType=\"input\"\n              label=\"CRP (region/number)\"\n              name=\"crp_no\"\n              type=\"text\"\n              maxLength=\"8\"\n              placeholder=\"00/00000\"\n              onKeyUp={() => crpDelimiterHandle()}\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Phone\"\n              name=\"phone\"\n              type=\"text\"\n              maxLength=\"13\"\n              placeholder=\"00-00000-0000\"\n              onKeyUp={() => phoneDelimiterHandle()}\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"example@email.com\"\n              myref={errorRef}\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Confirm Password\"\n              name=\"confirmPassword\"\n              type=\"password\"\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Date of Birth\"\n              name=\"dob\"\n              type=\"date\"\n            />\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-3\">\n                <FormField\n                  formType=\"input\"\n                  label=\"Zip\"\n                  type=\"text\"\n                  maxLength=\"8\"\n                  name=\"zip\"\n                  onKeyUp={(e) => handleFetchZip()}\n                />\n              </div>\n\n              <div className=\"form-group col-md-5\">\n                <FormField\n                  formType=\"input\"\n                  label=\"City\"\n                  type=\"text\"\n                  maxLength=\"30\"\n                  name=\"city\"\n                />\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <FormField\n                  label=\"State\"\n                  formType=\"select\"\n                  formData={state_uf_data}\n                  id=\"inputState\"\n                  className=\"form-control\"\n                  name=\"state\"\n                />\n              </div>\n            </div>\n\n            <FormField\n              formType=\"input\"\n              label=\"Address\"\n              name=\"address1\"\n              type=\"text\"\n              placeholder=\"Main St\"\n            />\n            <FormField\n              formType=\"input\"\n              label=\"Address 2\"\n              name=\"address2\"\n              type=\"text\"\n              placeholder=\"Number, Apartment, studio, or floor\"\n            />\n\n            <button\n              className=\"btn btn-outline-primary mt-3 mr-4 mb-4\"\n              type=\"submit\"\n            >\n              Sign Up\n            </button>\n            <button\n              className=\"btn btn-outline-danger mt-3 ml-3 mb-4\"\n              type=\"reset\"\n            >\n              Reset Form\n            </button>\n          </Form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default WithLoadingSpinner(SignUpForm);\n","import React from \"react\";\nimport SignUpForm from \"./sign_up-form/SignUpForm\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, withRouter } from \"react-router-dom\";\n\nconst SignUpModal = (props) => {\n  // passed from SignUp component (onClick button)\n  const { isOpen, closeModal } = props;\n\n  // tracks state of modal (shown, not shown)\n  const [show, setShow] = useState(false);\n\n  // to display message\n  const [displayMessage, setDisplayMessage] = useState(false);\n\n  // enables the use of history object\n  const history = useHistory();\n\n  // this closes the modal, triggered by clicking outside, or \"x\" button\n  const handleModal = () => {\n    setShow(false);\n    setDisplayMessage(false);\n    closeModal();\n  };\n\n  // Used when user is redirected to /signup after form submission\n  // tracks changes to history.location, closes the signup modal, and opens the confirmation/error modal\n  useEffect(() => {\n    if (history.location.state && history.location.state.display) {\n      setShow(false);\n      closeModal();\n      setDisplayMessage(true);\n    }\n  }, [history.location, closeModal]);\n\n  // it checks every change to props.isOpen (button is clicked) and updates the modal state\n  useEffect(() => {\n    setShow(isOpen);\n  }, [isOpen]);\n\n  return (\n    <>\n      {/*Form Modal*/}\n      <Modal\n        size=\"lg\"\n        show={show}\n        fullscreen={\"lg-down\"}\n        onHide={handleModal}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Enter your information</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <SignUpForm />\n        </Modal.Body>\n      </Modal>\n\n      {/*Confirmation/errors Modal*/}\n      {history.location.state ? (\n        <Modal\n          size=\"lg\"\n          show={displayMessage}\n          fullscreen={\"lg-down\"}\n          backdrop=\"static\"\n          keyboard={false}\n          centered\n        >\n          <Modal.Header>\n            <Modal.Title className=\"text-secondary\">\n              {history.location.state.message}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {history.location.state.success ? (\n              <p>\n                You have registered in Psicoworking. You should receive a\n                confirmation email in the next few minutes. We are reviewing\n                your application and you should expect our feedback within 48\n                hours.\n              </p>\n            ) : (\n              <p>\n                We could not proccess your registration at this time. Please,\n                try again or contact us for more information.\n              </p>\n            )}\n          </Modal.Body>\n          <Modal.Footer className=\"justify-content-center\">\n            <Button variant=\"secondary\" onClick={() => history.push(\"/\")}>\n              Continue\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nexport default withRouter(SignUpModal);\n","import React, { useState } from \"react\";\nimport SignUpModal from \"./SignUpModal\";\nimport { Button } from \"react-bootstrap\";\n\nconst SignUp = () => {\n  // tracks the state of the modal (open/closed)\n  const [modal, setModal] = useState(false);\n\n  // this callback is sent to Child component, so when modal is closed there\n  // it calls this function and set the modal status back to closed\n  // so the modal is ready to be opened again\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <h3 className=\"display-6 mb-3 text-secondary\">\n          Thank you for choosing us!\n        </h3>\n        <p className=\"mr-4 ml-2 mb-4 \">\n          In order to provide the best experience to Psicoworking clients, our\n          registration takes two steps. First, you need to complete our sign up\n          form. We will then evaluate all your information. You should receive\n          an email within 48 hours with details about your registration\n          approval.{\" \"}\n        </p>\n        <Button className=\"btn btn-secondary\" onClick={() => setModal(true)}>\n          Proceed to Sign Up\n        </Button>\n        <SignUpModal isOpen={modal} closeModal={closeModal} />\n      </div>\n    </>\n  );\n};\n\nexport default SignUp;\n","import { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { FormField } from \"../shared/form-components/FormField\";\nimport axios from \"axios\";\nimport WithMessage from \"../HOC/modal-messages/WithMessage\";\nimport WithLoadingSpinner from \"../HOC/loading-spinner/WithLoadingSpinner\";\nimport \"./RedefinePassword.css\";\n\nconst RedefinePassword = (props) => {\n  // YUP VALIDATION SCHEMA\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // GET SPINNER AND MODAL MESSAGE from props\n  const { setLoadingSpinner, setModalMessage } = props;\n\n  // HANDLE SUBMIT\n  const handleSubmit = async (values) => {\n    setLoadingSpinner(true, \"Processing...\");\n\n    try {\n      const response = await axios.post(\"/authentication/redefine\", values);\n\n      const { success } = response.data;\n\n      setLoadingSpinner(false);\n\n      // if submission response is successfull\n      if (success) {\n        setModalMessage(\n          true,\n          \"Check your email\",\n          \"We have sent a password recover instructions to your email. Please check your inbox.\",\n          \"/\"\n        );\n\n        // If login response is successfull and user IS ACTIVATED\n      } else {\n        setModalMessage(\n          true,\n          \"Something went wrong\",\n          \"We couldn't process your request at this time. Please, try again later.\"\n        );\n      }\n    } catch (e) {\n      setLoadingSpinner(false);\n      setModalMessage(\n        true,\n        \"Something went wrong\",\n        \"We couldn't process your request at this time. Please, try again later.\"\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {(formik) => (\n        <div className=\"container-fluid w-75\">\n          <h3 className=\"display-6 mb-3 text-secondary\">\n            Redefine your password\n          </h3>\n          <p className=\"mr-4 ml-2 mb-4 \">\n            Enter the email associated with your account and we'll send an email\n            with instructions to redefine your password.\n          </p>\n          <Container className=\"pt-2\">\n            <Form className=\"reset-pass-form\">\n              <FormField\n                formType=\"input\"\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"example@email.com\"\n              />\n              <button\n                className=\"login-form-btn btn btn-block btn-outline-primary mt-3 mb-3 \"\n                type=\"submit\"\n              >\n                Send instructions\n              </button>\n            </Form>\n          </Container>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default WithLoadingSpinner(WithMessage(RedefinePassword));\n","import { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { FormField } from \"../shared/form-components/FormField\";\nimport axios from \"axios\";\nimport WithMessage from \"../HOC/modal-messages/WithMessage\";\nimport WithLoadingSpinner from \"../HOC/loading-spinner/WithLoadingSpinner\";\nimport \"./RedefinePassword.css\";\nimport Error from \"../error-pages/Error\";\n\nconst RedefinePasswordLink = (props) => {\n  const [state, setState] = useState();\n\n  // GET SPINNER AND MODAL MESSAGE from props\n  const { linkId, setLoadingSpinner, setModalMessage } = props;\n\n  useEffect(() => {\n    setLoadingSpinner(false);\n    const getLink = async (link) => {\n      try {\n        const response = await axios.get(`/authentication/redefine/${link}`);\n        console.log(response.data);\n        setState(response.data.email);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getLink(linkId);\n  }, [linkId, setLoadingSpinner]);\n\n  // YUP VALIDATION SCHEMA\n  const validationSchema = Yup.object().shape({\n    // email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(8, \"Password must be at least 8 charaters\")\n      .required(\"Required\")\n      .matches(\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\n        \"Password must contain at least 8 characters, 1 uppercase, 1 lowercase, and 1 number.\"\n      ),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Password must match\")\n      .required(\"You must confirm your password\"),\n  });\n\n  // HANDLE SUBMIT\n  const handleSubmit = async (values) => {\n    setLoadingSpinner(true, \"Processing...\");\n\n    try {\n      values.email = state;\n      const response = await axios.patch(`/users/redefine_password`, {\n        values,\n      });\n\n      const { success } = response.data;\n\n      setLoadingSpinner(false);\n\n      // if submission response is successfull\n      if (success) {\n        setModalMessage(\n          true,\n          \"Success\",\n          \"Your password has been redefined. Please, log in into your account using your new password\",\n          \"/\"\n        );\n\n        // If login response is successfull and user IS ACTIVATED\n      } else {\n        setModalMessage(\n          true,\n          \"Something went wrong\",\n          \"We couldn't process your request at this time. Please, try again later.\"\n        );\n      }\n    } catch (e) {\n      setLoadingSpinner(false);\n      setModalMessage(\n        true,\n        \"Something went wrong\",\n        \"We couldn't process your request at this time. Please, try again later.\"\n      );\n    }\n  };\n\n  if (!state) {\n    return <Error type=\"404\" />;\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        //email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {(formik) => (\n        <div className=\"container-fluid w-75\">\n          <h3 className=\"display-6 mb-3 text-secondary\">Reset your password</h3>\n          <p className=\"mr-4 ml-2 mb-4 \">Please, choose your new password</p>\n          <Container className=\"pt-2\">\n            <Form className=\"reset-pass-form\">\n              <FormField\n                formType=\"input\"\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Enter your new password\"\n              />\n              <FormField\n                formType=\"input\"\n                label=\"Confirm Password\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"Confirm your new password\"\n              />\n              <button\n                className=\"login-form-btn btn btn-block btn-outline-primary mt-3 mb-3 \"\n                type=\"submit\"\n              >\n                Submit\n              </button>\n            </Form>\n          </Container>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default WithLoadingSpinner(WithMessage(RedefinePasswordLink));\n","import \"./About.css\";\nimport images from \"../shared/hook/imagesDataSource\";\nimport Footer from \"../footer/Footer\"\nfunction About() {\n  return (\n    <>\n      <div className=\"bg-light\">\n        <div className=\"container py-5\">\n          <div className=\"row h-100 align-items-center py-5\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"display-4\">About Us</h1>\n              <p className=\"lead text-muted mb-0\">Lorem ipsum dolor sit amet</p>\n            </div>\n            <div className=\"col-lg-6 d-none d-lg-block container-img\">\n              <img src={images.roomView} alt=\"\" className=\" img-fluid\" />\n              <div className=\"block\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white py-5\">\n        <div className=\"container py-5\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-lg-5 px-5 mx-auto\">\n              <img\n                src={images.pri}\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n            <div className=\"col-lg-6\">\n              <i className=\"fa fa-leaf fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Pricila</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row align-items-center mb-5\">\n            <div className=\"col-lg-6 order-2 order-lg-1\">\n              <i className=\"fa fa-bar-chart fa-2x mb-3 text-primary\"></i>\n              <h2 className=\"font-weight-light\">Nathalia</h2>\n              <p className=\"font-italic text-muted mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n            </div>\n            <div className=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\">\n              <img\n                src={images.nathalia}\n                alt=\"\"\n                className=\"img-fluid mb-4 mb-lg-0\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer/>\n    </>\n  );\n}\nexport default About;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Routes\nimport ProtectedRoutes from \"./Components/routes/ProtectedRoutes\";\nimport MainNavbar from \"./Components/shared/navbar/main_navbar/MainNavbar\";\nimport MainPage from \"./Components/main_page/MainPage\";\nimport SignUp from \"./Components/sign_up/SignUp\";\nimport Error from \"./Components/error-pages/Error\";\nimport RedefinePassword from \"./Components/redefine-password/RedefinePassword\";\nimport RedefinePasswordLink from \"./Components/redefine-password/RedefinePasswordLink\";\nimport About from \"./Components/about_us/About\";\n\n// Main app\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <MainNavbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n          <Route exact path=\"/contact\">\n            <h2 className=\"m-4 text-secondary\">Contact us</h2>\n          </Route>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/pricing\">\n            <h2 className=\"m-4 text-secondary\">Pricing</h2>\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route exact path=\"/redefine\">\n            <RedefinePassword />\n          </Route>\n          <Route\n            exact\n            path={`/redefine/:linkId`}\n            render={(props) => (\n              <RedefinePasswordLink linkId={props.match.params.linkId} />\n            )}\n          />\n\n          <Route path=\"/dashboard\" component={ProtectedRoutes} />\n\n          <Route path=\"/*\">\n            <div>PUBLIC ERROR</div>\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}